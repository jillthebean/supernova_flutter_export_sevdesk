(()=>{var e={"./node_modules/@supernovaio/export-helpers/build/helpers.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@supernovaio/export-helpers/build/helpers.js ***!
  \*******************************************************************/(e,t,r)=>{(()=>{"use strict";var e={639:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Iterators=void 0;const o=r(58);t.Iterators=class{static allTokenTypes(){return[o.TokenType.color,o.TokenType.typography,o.TokenType.dimension,o.TokenType.size,o.TokenType.space,o.TokenType.opacity,o.TokenType.fontSize,o.TokenType.lineHeight,o.TokenType.letterSpacing,o.TokenType.paragraphSpacing,o.TokenType.borderWidth,o.TokenType.radius,o.TokenType.duration,o.TokenType.zIndex,o.TokenType.shadow,o.TokenType.border,o.TokenType.gradient,o.TokenType.string,o.TokenType.productCopy,o.TokenType.fontFamily,o.TokenType.fontWeight,o.TokenType.textCase,o.TokenType.textDecoration,o.TokenType.visibility,o.TokenType.blur]}static allDimensionTokenTypes(){return[o.TokenType.dimension,o.TokenType.size,o.TokenType.space,o.TokenType.opacity,o.TokenType.fontSize,o.TokenType.lineHeight,o.TokenType.letterSpacing,o.TokenType.paragraphSpacing,o.TokenType.borderWidth,o.TokenType.radius,o.TokenType.duration,o.TokenType.zIndex]}static allStringTokenTypes(){return[o.TokenType.string,o.TokenType.productCopy,o.TokenType.fontFamily,o.TokenType.fontWeight]}static allOptionTokenTypes(){return[o.TokenType.textCase,o.TokenType.textDecoration,o.TokenType.visibility]}}},989:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.ColorFormat=void 0,(r=t.ColorFormat||(t.ColorFormat={})).rgb="rgb",r.rgba="rgba",r.smartRgba="smartRgba",r.hex6="hex6",r.hex8="hex8",r.hashHex6="hashHex6",r.hashHex8="hashHex8",r.smartHashHex="smartHashHex",r.smartHex="smartHex",r.hsl="hsl",r.hsla="hsla",r.smartHsla="smartHsla",r.smartUIColor="smartUIColor"},545:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.StringCase=void 0,(r=t.StringCase||(t.StringCase={})).camelCase="camelCase",r.capitalCase="capitalCase",r.constantCase="constantCase",r.dotCase="dotCase",r.headerCase="headerCase",r.noCase="noCase",r.paramCase="paramCase",r.pascalCase="pascalCase",r.pathCase="pathCase",r.sentenceCase="sentenceCase",r.snakeCase="snakeCase"},617:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.FileHelper=void 0;const o=r(58);t.FileHelper=class{static createCopyRemoteFile({relativePath:e,fileName:t,url:r}){return{path:e,name:t,type:o.OutputFileType.copyRemoteUrl,url:r}}static createTextFile({relativePath:e,fileName:t,content:r}){return{path:e,name:t,type:o.OutputFileType.text,content:r}}static createBinaryFile({relativePath:e,fileName:t,data:r}){return{path:e,name:t,type:o.OutputFileType.binary,data:r}}}},761:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.sureOptionalReference=void 0,t.sureOptionalReference=function(e,t,r=!0){if(!e||!r)return null;const o=t.get(e);if(!o)throw new Error(`Trying to retrieve unknown referenced token ${e}`);return o}},118:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.NetworkHelper=void 0,t.NetworkHelper=class{static async fetchAsText(e,t,r){return(await this.performFetch(e,t,r)).text()}static async fetchAsJSON(e,t,r){return(await this.performFetch(e,t,r)).json()}static async fetchAsData(e,t,r){return(await this.performFetch(e,t,r)).arrayBuffer()}static async performFetch(e,t,r){try{const o=await e.network.fetch(t,r);if(!o.ok)throw new Error(`Request failed with status ${o.status}, error: ${await o.text()}`);return o}catch(e){throw e}}}},771:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CSSHelper=void 0;const o=r(58),n=r(761),a=r(952);t.CSSHelper=class{static tokenToCSS(e,t,r){switch(e.tokenType){case o.TokenType.color:return this.colorTokenValueToCSS(e.value,t,r);case o.TokenType.border:return this.borderTokenValueToCSS(e.value,t,r);case o.TokenType.gradient:return this.gradientTokenValueToCSS(e.value,t,r);case o.TokenType.dimension:case o.TokenType.size:case o.TokenType.space:case o.TokenType.opacity:case o.TokenType.fontSize:case o.TokenType.lineHeight:case o.TokenType.letterSpacing:case o.TokenType.paragraphSpacing:case o.TokenType.borderWidth:case o.TokenType.radius:case o.TokenType.duration:case o.TokenType.zIndex:return this.dimensionTokenValueToCSS(e.value,t,r);case o.TokenType.shadow:return this.shadowTokenValueToCSS(e.value,t,r);case o.TokenType.fontWeight:case o.TokenType.fontFamily:case o.TokenType.productCopy:case o.TokenType.string:return this.stringTokenValueToCSS(e.value,t,r);case o.TokenType.textCase:case o.TokenType.textDecoration:case o.TokenType.visibility:return this.optionTokenValueToCSS(e.value,t,r);case o.TokenType.blur:return this.blurTokenValueToCSS(e.value,t,r);case o.TokenType.typography:return this.typographyTokenValueToCSS(e.value,t,r);default:throw new o.UnreachableCaseError(e.tokenType,"Unsupported token type for transformation to CSS:")}}static colorTokenValueToCSS(e,t,r){return a.ColorHelper.formattedColorOrVariableName(e,t,r)}static borderTokenValueToCSS(e,t,r){const o=(0,n.sureOptionalReference)(e.referencedTokenId,t,r.allowReferences);if(o)return r.tokenToVariableRef(o);const a=this.dimensionTokenValueToCSS(e.width,t,r),i=this.borderStyleToCSS(e.style),s=this.colorTokenValueToCSS(e.color,t,r);return this.borderPositionToCSS(e.position),`${a} ${i} ${s}`}static gradientTokenValueToCSS(e,t,r){return e.map((e=>this.gradientLayerToCSS(e,t,r))).join(", ")}static gradientLayerToCSS(e,t,r){const i=(0,n.sureOptionalReference)(e.referencedTokenId,t,r.allowReferences);if(i)return r.tokenToVariableRef(i);let s="";switch(e.type){case o.GradientType.linear:s="linear-gradient(0deg, ";break;case o.GradientType.radial:s="radial-gradient(circle, ";break;case o.GradientType.angular:s="conic-gradient(";break;default:s="linear-gradient(0deg, "}return`${s}${e.stops.map((e=>`${this.colorTokenValueToCSS(e.color,t,r)} ${a.ColorHelper.roundToDecimals(100*e.position,r.decimals)}%`)).join(", ")})`}static dimensionTokenValueToCSS(e,t,r){const o=(0,n.sureOptionalReference)(e.referencedTokenId,t,r.allowReferences);return o?r.tokenToVariableRef(o):`${a.ColorHelper.roundToDecimals(e.measure,r.decimals)}${this.unitToCSS(e.unit)}`}static shadowTokenValueToCSS(e,t,r){return e.map((e=>this.shadowLayerToCSS(e,t,r))).join(", ")}static shadowLayerToCSS(e,t,r){const a=(0,n.sureOptionalReference)(e.referencedTokenId,t,r.allowReferences);return a?r.tokenToVariableRef(a):`${e.type===o.ShadowType.inner?"inset ":""}${e.x}px ${e.y}px ${e.radius}px ${e.spread}px ${this.colorTokenValueToCSS(e.color,t,r)}`}static stringTokenValueToCSS(e,t,r){const o=(0,n.sureOptionalReference)(e.referencedTokenId,t,r.allowReferences);return o?r.tokenToVariableRef(o):`"${e.text}"`}static optionTokenValueToCSS(e,t,r){const o=(0,n.sureOptionalReference)(e.referencedTokenId,t,r.allowReferences);return o?r.tokenToVariableRef(o):`"${e.value}"`}static blurTokenValueToCSS(e,t,r){const o=(0,n.sureOptionalReference)(e.referencedTokenId,t,r.allowReferences);return o?r.tokenToVariableRef(o):`blur(${this.dimensionTokenValueToCSS(e.radius,t,r)})`}static typographyTokenValueToCSS(e,t,r){const a=(0,n.sureOptionalReference)(e.referencedTokenId,t,r.allowReferences);if(a)return r.tokenToVariableRef(a);const i=(0,n.sureOptionalReference)(e.fontFamily.referencedTokenId,t,r.allowReferences),s=(0,n.sureOptionalReference)(e.fontWeight.referencedTokenId,t,r.allowReferences),c=(0,n.sureOptionalReference)(e.textDecoration.referencedTokenId,t,r.allowReferences),l=(0,n.sureOptionalReference)(e.textCase.referencedTokenId,t,r.allowReferences),u=i?r.tokenToVariableRef(i):e.fontFamily.text,p=s?r.tokenToVariableRef(s):e.fontWeight.text;return c?r.tokenToVariableRef(c):e.textDecoration.value===o.TextDecoration.original&&this.textDecorationToCSS(e.textDecoration.value),l?r.tokenToVariableRef(l):e.textCase.value===o.TextCase.original&&this.textCaseToCSS(e.textCase.value),`${e.textCase.value===o.TextCase.smallCaps?"small-caps ":""}${s?p:`"${p}"`} ${this.dimensionTokenValueToCSS(e.fontSize,t,r)}/${this.dimensionTokenValueToCSS(e.lineHeight,t,r)} ${i?u:`"${u}"`}`}static borderStyleToCSS(e){switch(e){case o.BorderStyle.dashed:return"dashed";case o.BorderStyle.dotted:return"dotted";case o.BorderStyle.solid:return"solid";case o.BorderStyle.groove:return"groove";default:return"solid"}}static borderPositionToCSS(e){switch(e){case o.BorderPosition.center:return"center";case o.BorderPosition.inside:return"inside";case o.BorderPosition.outside:default:return"outside"}}static unitToCSS(e){switch(e){case o.Unit.percent:return"%";case o.Unit.pixels:return"px";case o.Unit.rem:return"rem";case o.Unit.raw:return"";case o.Unit.ms:return"ms";default:return"px"}}static textCaseToCSS(e){switch(e){case o.TextCase.original:return"none";case o.TextCase.upper:return"uppercase";case o.TextCase.lower:return"lowercase";case o.TextCase.camel:case o.TextCase.smallCaps:return"capitalize"}}static textDecorationToCSS(e){switch(e){case o.TextDecoration.original:return"none";case o.TextDecoration.underline:return"underline";case o.TextDecoration.strikethrough:return"line-through"}}}},952:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ColorHelper=void 0;const o=r(989),n=r(761);class a{static formattedColorOrVariableName(e,t,r){let a,i,s;const c=(0,n.sureOptionalReference)(e.referencedTokenId,t,r.allowReferences);if(c)a=r.tokenToVariableRef(c);else{const o=(0,n.sureOptionalReference)(e.color.referencedTokenId,t,r.allowReferences);o&&(i=r.tokenToVariableRef(o));const a=(0,n.sureOptionalReference)(e.opacity.referencedTokenId,t,r.allowReferences);a&&(s=r.tokenToVariableRef(a))}if(a)return a;if(!a&&!i&&!s)return this.formattedColor(e,r.colorFormat,r.decimals);switch(r.colorFormat){case o.ColorFormat.rgb:case o.ColorFormat.rgba:case o.ColorFormat.smartRgba:return this.colorToRgb(r.colorFormat,this.normalizedIntColor(e),e.opacity.measure,r.decimals,i,s);default:return this.formattedColor(e,r.colorFormat,r.decimals)}}static formattedColor(e,t,r=3){switch(t){case o.ColorFormat.hex6:case o.ColorFormat.hex8:case o.ColorFormat.hashHex6:case o.ColorFormat.hashHex8:case o.ColorFormat.smartHex:case o.ColorFormat.smartHashHex:return this.colorToHex(t,this.normalizedIntColor(e),e.opacity.measure);case o.ColorFormat.rgb:case o.ColorFormat.rgba:case o.ColorFormat.smartRgba:return this.colorToRgb(t,this.normalizedIntColor(e),e.opacity.measure,r,null,null);case o.ColorFormat.hsl:case o.ColorFormat.hsla:case o.ColorFormat.smartHsla:return this.colorToHsl(t,this.normalizedFractionalColor(e),e.opacity.measure,r);case o.ColorFormat.smartUIColor:return this.colorToUIColor(this.normalizedIntColor(e),e.opacity.measure,r)}}static colorToRgb(e,t,r,n,a,i){let s;return s=e===o.ColorFormat.rgba||e===o.ColorFormat.smartRgba&&r<1?`rgba(${a||`${t.r}, ${t.g}, ${t.b}`}, ${i||this.roundToDecimals(r,n)})`:`rgb(${a||`${t.r}, ${t.g}, ${t.b}`})`,s}static colorToHex(e,t,r){let n=`${this.pHex(t.r)}${this.pHex(t.g)}${this.pHex(t.b)}`;return(e===o.ColorFormat.hex8||e===o.ColorFormat.hashHex8||e===o.ColorFormat.smartHex&&r<1||e===o.ColorFormat.smartHashHex&&r<1)&&(n+=`${this.pHex(Math.round(255*r))}`),e!==o.ColorFormat.hashHex6&&e!==o.ColorFormat.hashHex8&&e!==o.ColorFormat.smartHashHex||(n=`#${n}`),n}static colorToHsl(e,t,r,n){const a=Math.max(t.r,t.g,t.b),i=Math.min(t.r,t.g,t.b);let s,c,l,u=(a+i)/2;if(a===i)s=c=0;else{const e=a-i;c=u>.5?e/(2-a-i):e/(a+i),a===t.r?s=(t.g-t.b)/e+(t.g<t.b?6:0):a===t.g?s=(t.b-t.r)/e+2:a===t.b&&(s=(t.r-t.g)/e+4),s/=6}return l=e===o.ColorFormat.hsla||e===o.ColorFormat.smartHsla&&r<1?`hsla(${Math.round(360*s)}%, ${Math.round(100*c)}%, ${Math.round(100*u)}%, ${this.roundToDecimals(r,n)})`:`hsl(${Math.round(360*s)}%, ${Math.round(100*c)}%, ${Math.round(100*u)}%)`,l}static colorToUIColor(e,t,r=3){let o=`UIColor(rgb: 0x${this.pHex(e.r)}${this.pHex(e.g)}${this.pHex(e.b)})`;return t<1&&(o+=`.withAlphaComponent(${t})`),o}static normalizedIntColor(e){return{r:Math.round(e.color.r),g:Math.round(e.color.g),b:Math.round(e.color.b)}}static normalizedFractionalColor(e,t=3){return{r:this.roundToDecimals(e.color.r/255,t),g:a.roundToDecimals(e.color.g/255,t),b:a.roundToDecimals(e.color.b/255,t)}}static roundToDecimals(e,t){const r=Math.pow(10,t),o=Math.round(e*r)/r;return parseFloat(o.toFixed(t))}static pHex(e){return e.toString(16).padStart(2,"0")}}t.ColorHelper=a},453:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.NamingHelper=void 0;const o=r(110),n=r(545);class a{static codeSafeVariableNameForToken(e,t,r,o){let n=[];return r&&(n=[...r.path],r.isRoot||n.push(r.name)),n.push(e.name),o&&o.length>0&&n.unshift(o),a.codeSafeVariableName(n,t)}static codeSafeVariableName(e,t){let r="string"==typeof e?e:e.join(" ");switch(r=r.replaceAll(/[^a-zA-Z0-9_-]/g,"_"),t){case n.StringCase.camelCase:r=(0,o.camelCase)(r);break;case n.StringCase.capitalCase:r=(0,o.capitalCase)(r);break;case n.StringCase.constantCase:r=(0,o.constantCase)(r);break;case n.StringCase.dotCase:r=(0,o.dotCase)(r);break;case n.StringCase.headerCase:r=(0,o.headerCase)(r);break;case n.StringCase.noCase:r=(0,o.noCase)(r);break;case n.StringCase.paramCase:r=(0,o.paramCase)(r);break;case n.StringCase.pascalCase:r=(0,o.pascalCase)(r);break;case n.StringCase.pathCase:r=(0,o.pathCase)(r);break;case n.StringCase.sentenceCase:r=(0,o.sentenceCase)(r);break;case n.StringCase.snakeCase:r=(0,o.snakeCase)(r)}return t!==n.StringCase.snakeCase&&t!==n.StringCase.constantCase&&(r=r.replaceAll("_","")),r.match(/^[^a-zA-Z]/)&&(r="_"+r),r}static nameAsCSSVarReference(e){return`var(--${e})`}static nameAsCSSVarDeclaration(e){return`--${e}`}}t.NamingHelper=a},58:e=>{e.exports=r(/*! @supernovaio/sdk-exporters */"./node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js")},110:e=>{e.exports=r(/*! change-case */"./node_modules/change-case/dist.es2015/index.js")}},o={};function n(t){var r=o[t];if(void 0!==r)return r.exports;var a=o[t]={exports:{}};return e[t](a,a.exports,n),a.exports}var a={};(()=>{var e=a;Object.defineProperty(e,"__esModule",{value:!0}),e.ColorFormat=e.StringCase=e.Iterators=e.CSSHelper=e.FileHelper=e.ColorHelper=e.NamingHelper=e.NetworkHelper=void 0;var t=n(118);Object.defineProperty(e,"NetworkHelper",{enumerable:!0,get:function(){return t.NetworkHelper}});var r=n(453);Object.defineProperty(e,"NamingHelper",{enumerable:!0,get:function(){return r.NamingHelper}});var o=n(952);Object.defineProperty(e,"ColorHelper",{enumerable:!0,get:function(){return o.ColorHelper}});var i=n(617);Object.defineProperty(e,"FileHelper",{enumerable:!0,get:function(){return i.FileHelper}});var s=n(771);Object.defineProperty(e,"CSSHelper",{enumerable:!0,get:function(){return s.CSSHelper}});var c=n(639);Object.defineProperty(e,"Iterators",{enumerable:!0,get:function(){return c.Iterators}});var l=n(545);Object.defineProperty(e,"StringCase",{enumerable:!0,get:function(){return l.StringCase}});var u=n(989);Object.defineProperty(e,"ColorFormat",{enumerable:!0,get:function(){return u.ColorFormat}})})();var i=t;for(var s in a)i[s]=a[s];a.__esModule&&Object.defineProperty(i,"__esModule",{value:!0})})()},"./node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js ***!
  \***********************************************************************************/(e,t)=>{(()=>{"use strict";var e={275:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsImageRefType=void 0,(r=t.DocsImageRefType||(t.DocsImageRefType={})).upload="Upload",r.asset="Asset",r.figmaFrame="FigmaFrame"},2695:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsLinkRefType=void 0,(r=t.DocsLinkRefType||(t.DocsLinkRefType={})).page="Page",r.pageHeading="pageHeading",r.group="Group",r.url="url"},3476:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageBlockShortcut=t.DocumentationLegacyPageBlockShortcutType=void 0,function(e){e.external="External",e.internal="Internal"}(r=t.DocumentationLegacyPageBlockShortcutType||(t.DocumentationLegacyPageBlockShortcutType={})),t.DocumentationLegacyPageBlockShortcut=class{constructor(e){var t;e.url?this.type=r.external:this.type=r.internal,this.title=this.shortcutTitleFromModel(e,this.type),this.description=this.shortcutDescriptionFromModel(e,this.type),this.previewUrl=this.shortcutPreviewUrlFromModel(e),this.type===r.internal&&(null===(t=e.documentationItemPreview)||void 0===t?void 0:t.valid)&&e.documentationItemId?this.internalId=e.documentationItemId:(this.internalId=null,this.type===r.external&&e.url?this.externalUrl=e.url:this.externalUrl=null)}shortcutTitleFromModel(e,t){var o,n,a,i,s;let c=null;return e.title&&e.title.trim().length>0?c=e.title:t===r.internal?c=null!==(n=null===(o=e.documentationItemPreview)||void 0===o?void 0:o.title)&&void 0!==n?n:null:t===r.external&&(c=null!==(s=null!==(i=null===(a=e.urlPreview)||void 0===a?void 0:a.title)&&void 0!==i?i:e.url)&&void 0!==s?s:null),c&&0!==c.trim().length?c:null}shortcutDescriptionFromModel(e,t){var o;let n=null;return e.description&&e.description.trim().length>0?n=e.description:t===r.external&&(n=null===(o=e.urlPreview)||void 0===o?void 0:o.description),n&&0!==n.trim().length?n:null}shortcutPreviewUrlFromModel(e){var t,r,o,n,a;return null!==(a=null!==(o=null!==(t=e.assetUrl)&&void 0!==t?t:null===(r=e.asset)||void 0===r?void 0:r.url)&&void 0!==o?o:null===(n=e.urlPreview)||void 0===n?void 0:n.thumbnailUrl)&&void 0!==a?a:null}}},4222:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.Alignment=void 0,(r=t.Alignment||(t.Alignment={})).left="Left",r.center="Center",r.stretch="Stretch"},1334:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.AssetFormat=void 0,(r=t.AssetFormat||(t.AssetFormat={})).png="png",r.pdf="pdf",r.svg="svg"},1940:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.AssetScale=void 0,(r=t.AssetScale||(t.AssetScale={})).x1="x1",r.x2="x2",r.x3="x3",r.x4="x4"},959:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.AssetScaleType=void 0,(r=t.AssetScaleType||(t.AssetScaleType={})).aspectFill="AspectFill",r.aspectFit="AspectFit"},9257:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.BlurType=void 0,(r=t.BlurType||(t.BlurType={})).layer="Layer",r.background="Background"},6675:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.ALL_BORDER_POSITIONS=t.BorderPosition=void 0,function(e){e.inside="Inside",e.center="Center",e.outside="Outside"}(r=t.BorderPosition||(t.BorderPosition={})),t.ALL_BORDER_POSITIONS=[r.inside,r.center,r.outside]},6701:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.ALL_BORDER_STYLES=t.BorderStyle=void 0,function(e){e.dashed="Dashed",e.dotted="Dotted",e.solid="Solid",e.groove="Groove"}(r=t.BorderStyle||(t.BorderStyle={})),t.ALL_BORDER_STYLES=[r.dashed,r.dotted,r.solid,r.groove]},829:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.ImportWarningType=void 0,(r=t.ImportWarningType||(t.ImportWarningType={})).UnsupportedFill="UnsupportedFill",r.UnsupportedStroke="UnsupportedStroke",r.UnsupportedEffect="UnsupportedEffect",r.StyleNotApplied="StyleNotApplied",r.NoPublishedStyles="NoPublishedStyles",r.NoPublishedComponents="NoPublishedComponents",r.NoPublishedAssets="NoPublishedAssets",r.NoVersionFound="NoVersionFound",r.ComponentHasNoThumbnail="ComponentHasNoThumbnail",r.DuplicateImportedStyleId="DuplicateImportedStyleId",r.DuplicateImportedStylePath="DuplicateImportedStylePath",r.NoPublishedElements="NoPublishedElements"},3611:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.CustomDomainErrorCode=void 0,(r=t.CustomDomainErrorCode||(t.CustomDomainErrorCode={})).generalError="GeneralError",r.dnsNotConfigured="DNSNotConfigured",r.maintenance="Maintenance"},6530:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.CustomDomainState=void 0,(r=t.CustomDomainState||(t.CustomDomainState={})).initial="Initial",r.domainSetupInProgress="DomainSetupInProgress",r.domainSetupFailed="DomainSetupFailed",r.domainSetupsSucces="DomainSetupSuccess",r.sslSetupInProgress="SSLSetupInProgress",r.sslSetupFailed="SSLSetupFailed",r.sslSetupSuccess="SSLSetupSuccess"},4934:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockBehaviorDataType=void 0,(r=t.DocsBlockBehaviorDataType||(t.DocsBlockBehaviorDataType={})).item="Item",r.token="Token",r.asset="Asset",r.component="Component"},8081:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockBehaviorSelectionType=void 0,(r=t.DocsBlockBehaviorSelectionType||(t.DocsBlockBehaviorSelectionType={})).entity="Entity",r.group="Group",r.entityAndGroup="EntityAndGroup"},9534:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockImagePropertyAspectRatio=void 0,(r=t.DocsBlockImagePropertyAspectRatio||(t.DocsBlockImagePropertyAspectRatio={})).square="Square",r.landscape="Landscape",r.portrait="Portrait",r.wide="Wide"},1043:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemEntityType=void 0,(r=t.DocsBlockItemEntityType||(t.DocsBlockItemEntityType={})).token="Token",r.tokenGroup="TokenGroup",r.asset="Asset",r.assetGroup="AssetGroup",r.component="Component",r.componentGroup="ComponentGroup"},3947:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyOptionRenderingStyle=void 0,(r=t.DocsBlockItemPropertyOptionRenderingStyle||(t.DocsBlockItemPropertyOptionRenderingStyle={})).segmentedControl="SegmentedControl",r.toggleButton="ToggleButton",r.select="Select",r.checkbox="Checkbox"},4742:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyRichTextStyle=void 0,(r=t.DocsBlockItemPropertyRichTextStyle||(t.DocsBlockItemPropertyRichTextStyle={})).title1="Title1",r.title2="Title2",r.title3="Title3",r.title4="Title4",r.title5="Title5",r.quote="Quote",r.callout="Callout",r.ol="OL",r.ul="UL"},7825:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyTextStyle=void 0,(r=t.DocsBlockItemPropertyTextStyle||(t.DocsBlockItemPropertyTextStyle={})).small="Small",r.regular="Regular",r.bold="Bold"},6751:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyType=void 0,(r=t.DocsBlockItemPropertyType||(t.DocsBlockItemPropertyType={})).richText="RichText",r.text="Text",r.boolean="Boolean",r.number="Number",r.singleSelect="SingleSelect",r.multiSelect="MultiSelect",r.image="Image",r.token="Token",r.tokenType="TokenType",r.tokenProperty="TokenProperty",r.component="Component",r.componentProperty="ComponentProperty",r.asset="Asset",r.assetProperty="AssetProperty",r.page="Page",r.pageProperty="PageProperty",r.embedURL="EmbedURL",r.embedFrame="EmbedFrame",r.markdown="Markdown",r.code="Code",r.codeSandbox="CodeSandbox",r.table="Table",r.divider="Divider",r.storybook="Storybook"},6777:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemVariantLayoutType=void 0,(r=t.DocsBlockItemVariantLayoutType||(t.DocsBlockItemVariantLayoutType={})).column="Column",r.row="Row"},9279:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemVariantLayoutWidth=void 0,(r=t.DocsBlockItemVariantLayoutWidth||(t.DocsBlockItemVariantLayoutWidth={})).c1="1",r.c2="2",r.c3="3",r.c4="4",r.c5="5",r.c6="6",r.c7="7",r.c8="8",r.c9="9",r.c10="10",r.c11="11",r.c12="12"},5271:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockOptionRenderingStyle=void 0,(r=t.DocsBlockOptionRenderingStyle||(t.DocsBlockOptionRenderingStyle={})).segmentedControl="SegmentedControl",r.toggleButton="ToggleButton",r.select="Select",r.checkbox="Checkbox"},3274:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockRichTextPropertyStyle=void 0,(r=t.DocsBlockRichTextPropertyStyle||(t.DocsBlockRichTextPropertyStyle={})).title1="Title1",r.title2="Title2",r.title3="Title3",r.title4="Title4",r.title5="Title5",r.quote="Quote",r.callout="Callout",r.ol="OL",r.ul="UL",r.default="Default"},6001:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockTextPropertyStyle=void 0,(r=t.DocsBlockTextPropertyStyle||(t.DocsBlockTextPropertyStyle={})).title1="Title1",r.title2="Title2",r.title3="Title3",r.title4="Title4",r.title5="Title5",r.default="Default",r.defaultBold="DefaultBold",r.defaultSemibold="DefaultSemibold",r.small="Small",r.smallBold="SmallBold",r.smallSemibold="SmallSemibold"},1755:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsEntityGroupBehavior=void 0,(r=t.DocsEntityGroupBehavior||(t.DocsEntityGroupBehavior={})).group="Group",r.tabs="Tabs"},8240:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsEntityType=void 0,(r=t.DocsEntityType||(t.DocsEntityType={})).group="Group",r.page="Page"},4142:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsSectionType=void 0,(r=t.DocsSectionType||(t.DocsSectionType={})).plain="Plain",r.tabs="Tabs"},4782:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyCalloutType=void 0,(r=t.DocumentationLegacyCalloutType||(t.DocumentationLegacyCalloutType={})).info="Info",r.success="Success",r.warning="Warning",r.error="Error"},8549:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyGroupBehavior=void 0,(r=t.DocumentationLegacyGroupBehavior||(t.DocumentationLegacyGroupBehavior={})).group="Group",r.tabs="Tabs"},1931:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyHeadingType=void 0,(r=t.DocumentationLegacyHeadingType||(t.DocumentationLegacyHeadingType={}))[r.h1=1]="h1",r[r.h2=2]="h2",r[r.h3=3]="h3"},5359:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyItemType=void 0,(r=t.DocumentationLegacyItemType||(t.DocumentationLegacyItemType={})).group="Group",r.page="Page"},9437:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageAssetType=void 0,(r=t.DocumentationLegacyPageAssetType||(t.DocumentationLegacyPageAssetType={})).image="image",r.figmaFrame="figmaFrame"},4649:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageBlockThemeType=void 0,(r=t.DocumentationLegacyPageBlockThemeType||(t.DocumentationLegacyPageBlockThemeType={})).override="Override",r.comparison="Comparison"},8560:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageBlockType=void 0,(r=t.DocumentationLegacyPageBlockType||(t.DocumentationLegacyPageBlockType={})).text="Text",r.heading="Heading",r.code="Code",r.unorderedList="UnorderedList",r.orderedList="OrderedList",r.quote="Quote",r.callout="Callout",r.divider="Divider",r.image="Image",r.token="Token",r.tokenList="TokenList",r.tokenGroup="TokenGroup",r.shortcuts="Shortcuts",r.link="Link",r.figmaEmbed="FigmaEmbed",r.youtubeEmbed="YoutubeEmbed",r.storybookEmbed="StorybookEmbed",r.genericEmbed="Embed",r.figmaFrames="FigmaFrames",r.custom="Custom",r.renderCode="RenderCode",r.componentAssets="ComponentAssets",r.column="Column",r.columnItem="ColumnItem",r.tabs="Tabs",r.tabItem="TabItem",r.table="Table",r.tableCell="TableCell",r.tableRow="TableRow"},4914:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.FrameAlignment=void 0,(r=t.FrameAlignment||(t.FrameAlignment={})).frameHeight="FrameHeight",r.center="Center"},5986:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.FrameLayout=void 0,(r=t.FrameLayout||(t.FrameLayout={})).c8="C8",r.c7="C7",r.c6="C6",r.c5="C5",r.c4="C4",r.c3="C3",r.c2="C2",r.c1="C1",r.c175="C1_75"},4667:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.GradientType=void 0,(r=t.GradientType||(t.GradientType={})).linear="Linear",r.radial="Radial",r.angular="Angular"},4336:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.RichTextSpanAttributeType=void 0,(r=t.RichTextSpanAttributeType||(t.RichTextSpanAttributeType={})).bold="Bold",r.italic="Italic",r.link="Link",r.strikethrough="Strikethrough",r.code="Code"},5467:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.ShadowType=void 0,(r=t.ShadowType||(t.ShadowType={})).drop="Drop",r.inner="Inner"},1694:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.SourceType=void 0,(r=t.SourceType||(t.SourceType={})).figma="Figma",r.tokenStudio="TokenStudio"},2047:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.TextCase=void 0,(r=t.TextCase||(t.TextCase={})).original="Original",r.upper="Upper",r.lower="Lower",r.camel="Camel",r.smallCaps="SmallCaps"},5780:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.TextDecoration=void 0,(r=t.TextDecoration||(t.TextDecoration={})).original="None",r.underline="Underline",r.strikethrough="Strikethrough"},1256:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DT_TOKEN_TYPES=t.tokenTypeIsReferencable=t.REFERENCABLE_TOKEN_TYPES=t.REPLACABLE_TOKEN_TYPES=t.tokenTypeIsNonPure=t.tokenTypeIsPure=t.PURE_TOKEN_TYPES=t.ALL_TOKEN_TYPES=t.MS_DIMENSION_TOKEN_TYPES=t.RAW_DIMENSION_TOKEN_TYPES=t.DIMENSION_TOKEN_TYPES=t.OPTION_TOKEN_TYPES=t.STRING_TOKEN_TYPES=t.TokenType=void 0,function(e){e.color="Color",e.typography="Typography",e.dimension="Dimension",e.size="Size",e.space="Space",e.opacity="Opacity",e.fontSize="FontSize",e.lineHeight="LineHeight",e.letterSpacing="LetterSpacing",e.paragraphSpacing="ParagraphSpacing",e.borderWidth="BorderWidth",e.radius="BorderRadius",e.duration="Duration",e.zIndex="ZIndex",e.shadow="Shadow",e.border="Border",e.gradient="Gradient",e.string="String",e.productCopy="ProductCopy",e.fontFamily="FontFamily",e.fontWeight="FontWeight",e.textCase="TextCase",e.textDecoration="TextDecoration",e.visibility="Visibility",e.blur="Blur"}(r=t.TokenType||(t.TokenType={})),t.STRING_TOKEN_TYPES=[r.string,r.productCopy,r.fontFamily,r.fontWeight],t.OPTION_TOKEN_TYPES=[r.textCase,r.textDecoration,r.visibility],t.DIMENSION_TOKEN_TYPES=[r.dimension,r.size,r.space,r.opacity,r.fontSize,r.lineHeight,r.letterSpacing,r.paragraphSpacing,r.borderWidth,r.radius,r.duration,r.zIndex],t.RAW_DIMENSION_TOKEN_TYPES=[r.opacity,r.zIndex],t.MS_DIMENSION_TOKEN_TYPES=[r.duration],t.ALL_TOKEN_TYPES=[...t.DIMENSION_TOKEN_TYPES,...t.STRING_TOKEN_TYPES,...t.OPTION_TOKEN_TYPES,r.color,r.gradient,r.border,r.radius,r.shadow,r.typography,r.blur],t.PURE_TOKEN_TYPES=[...t.DIMENSION_TOKEN_TYPES,...t.STRING_TOKEN_TYPES,...t.OPTION_TOKEN_TYPES],t.tokenTypeIsPure=e=>t.PURE_TOKEN_TYPES.includes(e),t.tokenTypeIsNonPure=e=>!(0,t.tokenTypeIsPure)(e),t.REPLACABLE_TOKEN_TYPES=[r.color,...t.DIMENSION_TOKEN_TYPES,...t.STRING_TOKEN_TYPES,...t.OPTION_TOKEN_TYPES],t.REFERENCABLE_TOKEN_TYPES=[r.color,...t.DIMENSION_TOKEN_TYPES,r.fontFamily,r.fontWeight,r.textCase,r.textDecoration],t.tokenTypeIsReferencable=e=>t.REFERENCABLE_TOKEN_TYPES.includes(e),t.DT_TOKEN_TYPES=[r.color,r.shadow,r.gradient,r.typography,r.border,...t.DIMENSION_TOKEN_TYPES,r.fontFamily,r.fontWeight,...t.OPTION_TOKEN_TYPES]},5389:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.MS_UNITS=t.PX_UNITS=t.RAW_UNITS=t.LINE_HEIGHT_UNITS=t.SIZE_UNITS=t.Unit=void 0,function(e){e.pixels="Pixels",e.percent="Percent",e.rem="Rem",e.ms="Ms",e.raw="Raw"}(r=t.Unit||(t.Unit={})),t.SIZE_UNITS=[r.pixels,r.percent,r.rem],t.LINE_HEIGHT_UNITS=[r.pixels,r.percent,r.rem,r.raw],t.RAW_UNITS=[r.raw],t.PX_UNITS=[r.pixels],t.MS_UNITS=[r.ms]},2916:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.UserRole=void 0,(r=t.UserRole||(t.UserRole={})).owner="Owner",r.admin="Admin",r.creator="Creator",r.viewer="Viewer",r.billing="Billing"},6398:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.VisibilityType=void 0,(r=t.VisibilityType||(t.VisibilityType={})).visible="Visible",r.hidden="Hidden"},4838:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceNPMRegistryAuthType=void 0,(r=t.WorkspaceNPMRegistryAuthType||(t.WorkspaceNPMRegistryAuthType={})).basic="Basic",r.bearer="Bearer"},2015:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceNPMRegistryType=void 0,(r=t.WorkspaceNPMRegistryType||(t.WorkspaceNPMRegistryType={})).npmJS="NPMJS",r.gitHub="GitHub",r.azureDevOps="AzureDevOps",r.artifactory="Artifactory",r.custom="Custom"},4357:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceSubscriptionPlanInterval=void 0,(r=t.WorkspaceSubscriptionPlanInterval||(t.WorkspaceSubscriptionPlanInterval={})).yearly="yearly",r.monthly="monthly"},743:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceSubscriptionProduct=void 0,(r=t.WorkspaceSubscriptionProduct||(t.WorkspaceSubscriptionProduct={})).free="free",r.team="team",r.teamTest="team_test",r.company="company",r.enterprise="enterprise"},5841:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceSubscriptionStatus=void 0,(r=t.WorkspaceSubscriptionStatus||(t.WorkspaceSubscriptionStatus={})).trialing="trialing",r.active="active",r.pastDue="past_due",r.canceled="canceled",r.unpaid="unpaid",r.incompleteExpired="incomplete_expired",r.incomplete="incomplete",r.unknown="unknown"},8917:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceSubscriptionStatusInternal=void 0,(r=t.WorkspaceSubscriptionStatusInternal||(t.WorkspaceSubscriptionStatusInternal={})).active="active",r.downgradedToFree="downgraded_to_free",r.suspended="suspended"},3803:(e,t)=>{var r,o;Object.defineProperty(t,"__esModule",{value:!0}),t.PulsarExecutor=t.OutputFileType=void 0,(o=t.OutputFileType||(t.OutputFileType={})).copyRemoteUrl="copyRemoteUrl",o.text="text",o.binary="binary",(r=t.PulsarExecutor||(t.PulsarExecutor={})).supernova="supernova",r.local="local"}},r={};function o(t){var n=r[t];if(void 0!==n)return n.exports;var a=r[t]={exports:{}};return e[t](a,a.exports,o),a.exports}var n={};(()=>{var e=n;Object.defineProperty(e,"__esModule",{value:!0}),e.UserRole=e.Unit=e.TokenType=e.TextDecoration=e.TextCase=e.ShadowType=e.RichTextSpanAttributeType=e.GradientType=e.FrameLayout=e.FrameAlignment=e.SourceType=e.DocsImageRefType=e.DocsLinkRefType=e.DocsSectionType=e.DocsEntityType=e.DocsEntityGroupBehavior=e.DocsBlockTextPropertyStyle=e.DocsBlockRichTextPropertyStyle=e.DocsBlockOptionRenderingStyle=e.DocsBlockItemVariantLayoutWidth=e.DocsBlockItemVariantLayoutType=e.DocsBlockItemPropertyType=e.DocsBlockItemPropertyTextStyle=e.DocsBlockItemPropertyRichTextStyle=e.DocsBlockItemPropertyOptionRenderingStyle=e.DocsBlockItemEntityType=e.DocsBlockImagePropertyAspectRatio=e.DocsBlockBehaviorSelectionType=e.DocsBlockBehaviorDataType=e.DocumentationLegacyPageBlockShortcutType=e.DocumentationLegacyPageBlockThemeType=e.DocumentationLegacyPageBlockType=e.DocumentationLegacyPageAssetType=e.DocumentationLegacyItemType=e.DocumentationLegacyHeadingType=e.DocumentationLegacyGroupBehavior=e.DocumentationLegacyCalloutType=e.BorderStyle=e.BorderPosition=e.BlurType=e.AssetScaleType=e.AssetScale=e.AssetFormat=e.Alignment=e.ALL_TOKEN_TYPES=e.ALL_BORDER_STYLES=e.ALL_BORDER_POSITIONS=e.OPTION_TOKEN_TYPES=e.STRING_TOKEN_TYPES=e.DIMENSION_TOKEN_TYPES=void 0,e.PulsarExecutor=e.OutputFileType=e.CustomDomainState=e.CustomDomainErrorCode=e.ImportWarningType=e.WorkspaceNPMRegistryType=e.WorkspaceNPMRegistryAuthType=e.WorkspaceSubscriptionStatusInternal=e.WorkspaceSubscriptionStatus=e.WorkspaceSubscriptionProduct=e.WorkspaceSubscriptionPlanInterval=e.VisibilityType=void 0;var t=o(1256);Object.defineProperty(e,"DIMENSION_TOKEN_TYPES",{enumerable:!0,get:function(){return t.DIMENSION_TOKEN_TYPES}}),Object.defineProperty(e,"STRING_TOKEN_TYPES",{enumerable:!0,get:function(){return t.STRING_TOKEN_TYPES}}),Object.defineProperty(e,"OPTION_TOKEN_TYPES",{enumerable:!0,get:function(){return t.OPTION_TOKEN_TYPES}});var r=o(6675);Object.defineProperty(e,"ALL_BORDER_POSITIONS",{enumerable:!0,get:function(){return r.ALL_BORDER_POSITIONS}});var a=o(6701);Object.defineProperty(e,"ALL_BORDER_STYLES",{enumerable:!0,get:function(){return a.ALL_BORDER_STYLES}});var i=o(1256);Object.defineProperty(e,"ALL_TOKEN_TYPES",{enumerable:!0,get:function(){return i.ALL_TOKEN_TYPES}});var s=o(4222);Object.defineProperty(e,"Alignment",{enumerable:!0,get:function(){return s.Alignment}});var c=o(1334);Object.defineProperty(e,"AssetFormat",{enumerable:!0,get:function(){return c.AssetFormat}});var l=o(1940);Object.defineProperty(e,"AssetScale",{enumerable:!0,get:function(){return l.AssetScale}});var u=o(959);Object.defineProperty(e,"AssetScaleType",{enumerable:!0,get:function(){return u.AssetScaleType}});var p=o(9257);Object.defineProperty(e,"BlurType",{enumerable:!0,get:function(){return p.BlurType}});var d=o(6675);Object.defineProperty(e,"BorderPosition",{enumerable:!0,get:function(){return d.BorderPosition}});var y=o(6701);Object.defineProperty(e,"BorderStyle",{enumerable:!0,get:function(){return y.BorderStyle}});var m=o(4782);Object.defineProperty(e,"DocumentationLegacyCalloutType",{enumerable:!0,get:function(){return m.DocumentationLegacyCalloutType}});var f=o(8549);Object.defineProperty(e,"DocumentationLegacyGroupBehavior",{enumerable:!0,get:function(){return f.DocumentationLegacyGroupBehavior}});var T=o(1931);Object.defineProperty(e,"DocumentationLegacyHeadingType",{enumerable:!0,get:function(){return T.DocumentationLegacyHeadingType}});var h=o(5359);Object.defineProperty(e,"DocumentationLegacyItemType",{enumerable:!0,get:function(){return h.DocumentationLegacyItemType}});var g=o(9437);Object.defineProperty(e,"DocumentationLegacyPageAssetType",{enumerable:!0,get:function(){return g.DocumentationLegacyPageAssetType}});var v=o(8560);Object.defineProperty(e,"DocumentationLegacyPageBlockType",{enumerable:!0,get:function(){return v.DocumentationLegacyPageBlockType}});var b=o(4649);Object.defineProperty(e,"DocumentationLegacyPageBlockThemeType",{enumerable:!0,get:function(){return b.DocumentationLegacyPageBlockThemeType}});var _=o(3476);Object.defineProperty(e,"DocumentationLegacyPageBlockShortcutType",{enumerable:!0,get:function(){return _.DocumentationLegacyPageBlockShortcutType}});var S=o(4934);Object.defineProperty(e,"DocsBlockBehaviorDataType",{enumerable:!0,get:function(){return S.DocsBlockBehaviorDataType}});var k=o(8081);Object.defineProperty(e,"DocsBlockBehaviorSelectionType",{enumerable:!0,get:function(){return k.DocsBlockBehaviorSelectionType}});var P=o(9534);Object.defineProperty(e,"DocsBlockImagePropertyAspectRatio",{enumerable:!0,get:function(){return P.DocsBlockImagePropertyAspectRatio}});var C=o(1043);Object.defineProperty(e,"DocsBlockItemEntityType",{enumerable:!0,get:function(){return C.DocsBlockItemEntityType}});var x=o(3947);Object.defineProperty(e,"DocsBlockItemPropertyOptionRenderingStyle",{enumerable:!0,get:function(){return x.DocsBlockItemPropertyOptionRenderingStyle}});var O=o(4742);Object.defineProperty(e,"DocsBlockItemPropertyRichTextStyle",{enumerable:!0,get:function(){return O.DocsBlockItemPropertyRichTextStyle}});var I=o(7825);Object.defineProperty(e,"DocsBlockItemPropertyTextStyle",{enumerable:!0,get:function(){return I.DocsBlockItemPropertyTextStyle}});var w=o(6751);Object.defineProperty(e,"DocsBlockItemPropertyType",{enumerable:!0,get:function(){return w.DocsBlockItemPropertyType}});var j=o(6777);Object.defineProperty(e,"DocsBlockItemVariantLayoutType",{enumerable:!0,get:function(){return j.DocsBlockItemVariantLayoutType}});var D=o(9279);Object.defineProperty(e,"DocsBlockItemVariantLayoutWidth",{enumerable:!0,get:function(){return D.DocsBlockItemVariantLayoutWidth}});var N=o(5271);Object.defineProperty(e,"DocsBlockOptionRenderingStyle",{enumerable:!0,get:function(){return N.DocsBlockOptionRenderingStyle}});var E=o(3274);Object.defineProperty(e,"DocsBlockRichTextPropertyStyle",{enumerable:!0,get:function(){return E.DocsBlockRichTextPropertyStyle}});var R=o(6001);Object.defineProperty(e,"DocsBlockTextPropertyStyle",{enumerable:!0,get:function(){return R.DocsBlockTextPropertyStyle}});var F=o(1755);Object.defineProperty(e,"DocsEntityGroupBehavior",{enumerable:!0,get:function(){return F.DocsEntityGroupBehavior}});var B=o(8240);Object.defineProperty(e,"DocsEntityType",{enumerable:!0,get:function(){return B.DocsEntityType}});var L=o(4142);Object.defineProperty(e,"DocsSectionType",{enumerable:!0,get:function(){return L.DocsSectionType}});var M=o(2695);Object.defineProperty(e,"DocsLinkRefType",{enumerable:!0,get:function(){return M.DocsLinkRefType}});var A=o(275);Object.defineProperty(e,"DocsImageRefType",{enumerable:!0,get:function(){return A.DocsImageRefType}});var H=o(1694);Object.defineProperty(e,"SourceType",{enumerable:!0,get:function(){return H.SourceType}});var V=o(4914);Object.defineProperty(e,"FrameAlignment",{enumerable:!0,get:function(){return V.FrameAlignment}});var W=o(5986);Object.defineProperty(e,"FrameLayout",{enumerable:!0,get:function(){return W.FrameLayout}});var $=o(4667);Object.defineProperty(e,"GradientType",{enumerable:!0,get:function(){return $.GradientType}});var U=o(4336);Object.defineProperty(e,"RichTextSpanAttributeType",{enumerable:!0,get:function(){return U.RichTextSpanAttributeType}});var G=o(5467);Object.defineProperty(e,"ShadowType",{enumerable:!0,get:function(){return G.ShadowType}});var Y=o(2047);Object.defineProperty(e,"TextCase",{enumerable:!0,get:function(){return Y.TextCase}});var z=o(5780);Object.defineProperty(e,"TextDecoration",{enumerable:!0,get:function(){return z.TextDecoration}});var K=o(1256);Object.defineProperty(e,"TokenType",{enumerable:!0,get:function(){return K.TokenType}});var q=o(5389);Object.defineProperty(e,"Unit",{enumerable:!0,get:function(){return q.Unit}});var Z=o(2916);Object.defineProperty(e,"UserRole",{enumerable:!0,get:function(){return Z.UserRole}});var J=o(6398);Object.defineProperty(e,"VisibilityType",{enumerable:!0,get:function(){return J.VisibilityType}});var X=o(4357);Object.defineProperty(e,"WorkspaceSubscriptionPlanInterval",{enumerable:!0,get:function(){return X.WorkspaceSubscriptionPlanInterval}});var Q=o(743);Object.defineProperty(e,"WorkspaceSubscriptionProduct",{enumerable:!0,get:function(){return Q.WorkspaceSubscriptionProduct}});var ee=o(5841);Object.defineProperty(e,"WorkspaceSubscriptionStatus",{enumerable:!0,get:function(){return ee.WorkspaceSubscriptionStatus}});var te=o(8917);Object.defineProperty(e,"WorkspaceSubscriptionStatusInternal",{enumerable:!0,get:function(){return te.WorkspaceSubscriptionStatusInternal}});var re=o(4838);Object.defineProperty(e,"WorkspaceNPMRegistryAuthType",{enumerable:!0,get:function(){return re.WorkspaceNPMRegistryAuthType}});var oe=o(2015);Object.defineProperty(e,"WorkspaceNPMRegistryType",{enumerable:!0,get:function(){return oe.WorkspaceNPMRegistryType}});var ne=o(829);Object.defineProperty(e,"ImportWarningType",{enumerable:!0,get:function(){return ne.ImportWarningType}});var ae=o(3611);Object.defineProperty(e,"CustomDomainErrorCode",{enumerable:!0,get:function(){return ae.CustomDomainErrorCode}});var ie=o(6530);Object.defineProperty(e,"CustomDomainState",{enumerable:!0,get:function(){return ie.CustomDomainState}});var se=o(3803);Object.defineProperty(e,"OutputFileType",{enumerable:!0,get:function(){return se.OutputFileType}}),Object.defineProperty(e,"PulsarExecutor",{enumerable:!0,get:function(){return se.PulsarExecutor}})})();var a=t;for(var i in n)a[i]=n[i];n.__esModule&&Object.defineProperty(a,"__esModule",{value:!0})})()},"./node_modules/camel-case/dist.es2015/index.js":
/*!******************************************************!*\
  !*** ./node_modules/camel-case/dist.es2015/index.js ***!
  \******************************************************/(e,t,r)=>{"use strict";r.r(t),r.d(t,{camelCase:()=>s,camelCaseTransform:()=>a,camelCaseTransformMerge:()=>i});var o=r(/*! tslib */"./node_modules/tslib/tslib.es6.mjs"),n=r(/*! pascal-case */"./node_modules/pascal-case/dist.es2015/index.js");function a(e,t){return 0===t?e.toLowerCase():(0,n.pascalCaseTransform)(e,t)}function i(e,t){return 0===t?e.toLowerCase():(0,n.pascalCaseTransformMerge)(e)}function s(e,t){return void 0===t&&(t={}),(0,n.pascalCase)(e,(0,o.__assign)({transform:a},t))}},"./node_modules/capital-case/dist.es2015/index.js":
/*!********************************************************!*\
  !*** ./node_modules/capital-case/dist.es2015/index.js ***!
  \********************************************************/(e,t,r)=>{"use strict";r.r(t),r.d(t,{capitalCase:()=>s,capitalCaseTransform:()=>i});var o=r(/*! tslib */"./node_modules/tslib/tslib.es6.mjs"),n=r(/*! no-case */"./node_modules/no-case/dist.es2015/index.js"),a=r(/*! upper-case-first */"./node_modules/upper-case-first/dist.es2015/index.js");function i(e){return(0,a.upperCaseFirst)(e.toLowerCase())}function s(e,t){return void 0===t&&(t={}),(0,n.noCase)(e,(0,o.__assign)({delimiter:" ",transform:i},t))}},"./node_modules/change-case/dist.es2015/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/change-case/dist.es2015/index.js ***!
  \*******************************************************/(e,t,r)=>{"use strict";r.r(t),r.d(t,{camelCase:()=>o.camelCase,camelCaseTransform:()=>o.camelCaseTransform,camelCaseTransformMerge:()=>o.camelCaseTransformMerge,capitalCase:()=>n.capitalCase,capitalCaseTransform:()=>n.capitalCaseTransform,constantCase:()=>a.constantCase,dotCase:()=>i.dotCase,headerCase:()=>s.headerCase,noCase:()=>c.noCase,paramCase:()=>l.paramCase,pascalCase:()=>u.pascalCase,pascalCaseTransform:()=>u.pascalCaseTransform,pascalCaseTransformMerge:()=>u.pascalCaseTransformMerge,pathCase:()=>p.pathCase,sentenceCase:()=>d.sentenceCase,sentenceCaseTransform:()=>d.sentenceCaseTransform,snakeCase:()=>y.snakeCase});var o=r(/*! camel-case */"./node_modules/camel-case/dist.es2015/index.js"),n=r(/*! capital-case */"./node_modules/capital-case/dist.es2015/index.js"),a=r(/*! constant-case */"./node_modules/constant-case/dist.es2015/index.js"),i=r(/*! dot-case */"./node_modules/dot-case/dist.es2015/index.js"),s=r(/*! header-case */"./node_modules/header-case/dist.es2015/index.js"),c=r(/*! no-case */"./node_modules/no-case/dist.es2015/index.js"),l=r(/*! param-case */"./node_modules/param-case/dist.es2015/index.js"),u=r(/*! pascal-case */"./node_modules/pascal-case/dist.es2015/index.js"),p=r(/*! path-case */"./node_modules/path-case/dist.es2015/index.js"),d=r(/*! sentence-case */"./node_modules/sentence-case/dist.es2015/index.js"),y=r(/*! snake-case */"./node_modules/snake-case/dist.es2015/index.js")},"./node_modules/constant-case/dist.es2015/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/constant-case/dist.es2015/index.js ***!
  \*********************************************************/(e,t,r)=>{"use strict";r.r(t),r.d(t,{constantCase:()=>i});var o=r(/*! tslib */"./node_modules/tslib/tslib.es6.mjs"),n=r(/*! no-case */"./node_modules/no-case/dist.es2015/index.js"),a=r(/*! upper-case */"./node_modules/upper-case/dist.es2015/index.js");function i(e,t){return void 0===t&&(t={}),(0,n.noCase)(e,(0,o.__assign)({delimiter:"_",transform:a.upperCase},t))}},"./node_modules/dot-case/dist.es2015/index.js":
/*!****************************************************!*\
  !*** ./node_modules/dot-case/dist.es2015/index.js ***!
  \****************************************************/(e,t,r)=>{"use strict";r.r(t),r.d(t,{dotCase:()=>a});var o=r(/*! tslib */"./node_modules/tslib/tslib.es6.mjs"),n=r(/*! no-case */"./node_modules/no-case/dist.es2015/index.js");function a(e,t){return void 0===t&&(t={}),(0,n.noCase)(e,(0,o.__assign)({delimiter:"."},t))}},"./node_modules/header-case/dist.es2015/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/header-case/dist.es2015/index.js ***!
  \*******************************************************/(e,t,r)=>{"use strict";r.r(t),r.d(t,{headerCase:()=>a});var o=r(/*! tslib */"./node_modules/tslib/tslib.es6.mjs"),n=r(/*! capital-case */"./node_modules/capital-case/dist.es2015/index.js");function a(e,t){return void 0===t&&(t={}),(0,n.capitalCase)(e,(0,o.__assign)({delimiter:"-"},t))}},"./node_modules/lower-case/dist.es2015/index.js":
/*!******************************************************!*\
  !*** ./node_modules/lower-case/dist.es2015/index.js ***!
  \******************************************************/(e,t,r)=>{"use strict";r.r(t),r.d(t,{localeLowerCase:()=>n,lowerCase:()=>a});var o={tr:{regexp:/\u0130|\u0049|\u0049\u0307/g,map:{İ:"i",I:"ı",İ:"i"}},az:{regexp:/\u0130/g,map:{İ:"i",I:"ı",İ:"i"}},lt:{regexp:/\u0049|\u004A|\u012E|\u00CC|\u00CD|\u0128/g,map:{I:"i̇",J:"j̇",Į:"į̇",Ì:"i̇̀",Í:"i̇́",Ĩ:"i̇̃"}}};function n(e,t){var r=o[t.toLowerCase()];return a(r?e.replace(r.regexp,(function(e){return r.map[e]})):e)}function a(e){return e.toLowerCase()}},"./node_modules/no-case/dist.es2015/index.js":
/*!***************************************************!*\
  !*** ./node_modules/no-case/dist.es2015/index.js ***!
  \***************************************************/(e,t,r)=>{"use strict";r.r(t),r.d(t,{noCase:()=>i});var o=r(/*! lower-case */"./node_modules/lower-case/dist.es2015/index.js"),n=[/([a-z0-9])([A-Z])/g,/([A-Z])([A-Z][a-z])/g],a=/[^A-Z0-9]+/gi;function i(e,t){void 0===t&&(t={});for(var r=t.splitRegexp,i=void 0===r?n:r,c=t.stripRegexp,l=void 0===c?a:c,u=t.transform,p=void 0===u?o.lowerCase:u,d=t.delimiter,y=void 0===d?" ":d,m=s(s(e,i,"$1\0$2"),l,"\0"),f=0,T=m.length;"\0"===m.charAt(f);)f++;for(;"\0"===m.charAt(T-1);)T--;return m.slice(f,T).split("\0").map(p).join(y)}function s(e,t,r){return t instanceof RegExp?e.replace(t,r):t.reduce((function(e,t){return e.replace(t,r)}),e)}},"./node_modules/param-case/dist.es2015/index.js":
/*!******************************************************!*\
  !*** ./node_modules/param-case/dist.es2015/index.js ***!
  \******************************************************/(e,t,r)=>{"use strict";r.r(t),r.d(t,{paramCase:()=>a});var o=r(/*! tslib */"./node_modules/tslib/tslib.es6.mjs"),n=r(/*! dot-case */"./node_modules/dot-case/dist.es2015/index.js");function a(e,t){return void 0===t&&(t={}),(0,n.dotCase)(e,(0,o.__assign)({delimiter:"-"},t))}},"./node_modules/pascal-case/dist.es2015/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/pascal-case/dist.es2015/index.js ***!
  \*******************************************************/(e,t,r)=>{"use strict";r.r(t),r.d(t,{pascalCase:()=>s,pascalCaseTransform:()=>a,pascalCaseTransformMerge:()=>i});var o=r(/*! tslib */"./node_modules/tslib/tslib.es6.mjs"),n=r(/*! no-case */"./node_modules/no-case/dist.es2015/index.js");function a(e,t){var r=e.charAt(0),o=e.substr(1).toLowerCase();return t>0&&r>="0"&&r<="9"?"_"+r+o:""+r.toUpperCase()+o}function i(e){return e.charAt(0).toUpperCase()+e.slice(1).toLowerCase()}function s(e,t){return void 0===t&&(t={}),(0,n.noCase)(e,(0,o.__assign)({delimiter:"",transform:a},t))}},"./node_modules/path-case/dist.es2015/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/path-case/dist.es2015/index.js ***!
  \*****************************************************/(e,t,r)=>{"use strict";r.r(t),r.d(t,{pathCase:()=>a});var o=r(/*! tslib */"./node_modules/tslib/tslib.es6.mjs"),n=r(/*! dot-case */"./node_modules/dot-case/dist.es2015/index.js");function a(e,t){return void 0===t&&(t={}),(0,n.dotCase)(e,(0,o.__assign)({delimiter:"/"},t))}},"./node_modules/sentence-case/dist.es2015/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/sentence-case/dist.es2015/index.js ***!
  \*********************************************************/(e,t,r)=>{"use strict";r.r(t),r.d(t,{sentenceCase:()=>s,sentenceCaseTransform:()=>i});var o=r(/*! tslib */"./node_modules/tslib/tslib.es6.mjs"),n=r(/*! no-case */"./node_modules/no-case/dist.es2015/index.js"),a=r(/*! upper-case-first */"./node_modules/upper-case-first/dist.es2015/index.js");function i(e,t){var r=e.toLowerCase();return 0===t?(0,a.upperCaseFirst)(r):r}function s(e,t){return void 0===t&&(t={}),(0,n.noCase)(e,(0,o.__assign)({delimiter:" ",transform:i},t))}},"./node_modules/snake-case/dist.es2015/index.js":
/*!******************************************************!*\
  !*** ./node_modules/snake-case/dist.es2015/index.js ***!
  \******************************************************/(e,t,r)=>{"use strict";r.r(t),r.d(t,{snakeCase:()=>a});var o=r(/*! tslib */"./node_modules/tslib/tslib.es6.mjs"),n=r(/*! dot-case */"./node_modules/dot-case/dist.es2015/index.js");function a(e,t){return void 0===t&&(t={}),(0,n.dotCase)(e,(0,o.__assign)({delimiter:"_"},t))}},"./src/content/primitive_colors.ts":
/*!*****************************************!*\
  !*** ./src/content/primitive_colors.ts ***!
  \*****************************************/(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createPrimitiveColors=void 0;const o=r(/*! @supernovaio/sdk-exporters */"./node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js"),n=r(/*! ./util */"./src/content/util.ts"),a="ColorPrimitives";t.createPrimitiveColors=function(e){const t=e.getTokensForType(o.TokenType.color),r=e.getGroupsForType(o.TokenType.color).filter((e=>e.tokenType===o.TokenType.color&&16==e.childrenIds.length)),i={};let s=r.reduce(((r,o)=>(r[(0,n.groupVariableName)(o)]=t.filter((e=>o.id==e.parentGroupId)).reduce(((t,r)=>(t[r.name]=(0,n.flutterColorValue)(r),i[r.id]=e.resolveTokenVariableName(r,a),t)),{}),r)),{});const c=t.filter((e=>!(e.id in i)&&!e.value.referencedTokenId));let l={};for(let t of c){const r=e.resolveTokenVariableName(t,a);l[r]=(0,n.flutterColorValue)(t),i[t.id]=a+"."+r}return{className:a,swatches:s,colors:l}}},"./src/content/primitive_dimensions.ts":
/*!*********************************************!*\
  !*** ./src/content/primitive_dimensions.ts ***!
  \*********************************************/(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createGenericSpacings=t.createLetterSpacings=t.createLineHeights=t.createFontSizes=void 0;const o=r(/*! @supernovaio/sdk-exporters */"./node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js");function n(e,t){const r=e.getTokensForType(t.tokenType);return{className:t.className,typeName:t.typeName,variables:r.reduce(((r,o)=>(r[e.resolveTokenVariableName(o,t.className,t.prefix)]=t.resolveValue(o),r)),new Map)}}const a={className:"OffenburgFontSizes",typeName:"double",tokenType:o.TokenType.fontSize,prefix:"f",resolveValue:e=>`${e.value.measure}`};t.createFontSizes=function(e){return n(e,a)};const i={className:"OffenburgLineHeights",typeName:"double",tokenType:o.TokenType.lineHeight,prefix:"l",resolveValue:e=>`${e.value.measure}`};t.createLineHeights=function(e){return n(e,i)};const s={className:"OffenburgLetterSpacings",typeName:"double",tokenType:o.TokenType.letterSpacing,resolveValue:e=>`${e.value.measure}`};t.createLetterSpacings=function(e){return n(e,s)};const c={className:"OffenburgGenericSpacings",typeName:"double",tokenType:o.TokenType.dimension,resolveValue:e=>`${e.value.measure}`};t.createGenericSpacings=function(e){return n(e,c)}},"./src/content/semantic_colors.ts":
/*!****************************************!*\
  !*** ./src/content/semantic_colors.ts ***!
  \****************************************/(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createColors=void 0;const o=r(/*! @supernovaio/sdk-exporters */"./node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js"),n=r(/*! ./util */"./src/content/util.ts"),a="OffenburgColorScheme";t.createColors=function(e){const t=function(e,t){const r=new Map;for(let o of e){const e=t.resolveTokenVariableName(o,a);r.has(e)||(r[e]=t.resolveTokenReference(o.value.referencedTokenId))}return r}(e.getUnprocessedTokensForType(o.TokenType.color).filter(n.isPrimitive),e);return{className:a,colors:Object.keys(t),themes:{light:t}}}},"./src/content/shadows.ts":
/*!********************************!*\
  !*** ./src/content/shadows.ts ***!
  \********************************/(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createShadows=void 0;const o=r(/*! @supernovaio/sdk-exporters */"./node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js"),n="OffenburgShadows";function a(e){const t=e.value.map((e=>e.radius)).reduce(((e,t)=>e+t),0),r=e.value.map((e=>e.x)).reduce(((e,t)=>e+t),0),o=e.value.map((e=>e.y)).reduce(((e,t)=>e+t),0),n=e.value.map((e=>e.spread)).reduce(((e,t)=>e+t),0),a=e.value.reduce(((e,t)=>({a:e.a+t.color.opacity.measure,r:e.r+t.color.color.r,g:e.g+t.color.color.g,b:e.b+t.color.color.b})),{a:0,r:0,g:0,b:0});return{blurRadius:`${t}`,offsetX:`${r}`,offsetY:`${o}`,spreadRadius:`${n}`,blurStyle:"BlurStyle.inner",color:s(a.a,a.r,a.g,a.b)}}function i(e){return 0==e.length?"00":1==e.length?"0"+e:e}function s(e,t,r,o){let n=(255*e).toString(16).slice(0,2),a=t.toString(16),s=r.toString(16),c=o.toString(16);return n=i(n),a=i(a),s=i(s),c=i(c),`Color(0x${n+a+s+c})`}t.createShadows=function(e){const t=function(e,t){const r=new Map;for(let o of e){const e=t.resolveTokenVariableName(o,n);r.has(e)||(r[e]=a(o))}return r}(e.getUnprocessedTokensForType(o.TokenType.shadow),e);return{className:n,variables:t}}},"./src/content/typography.ts":
/*!***********************************!*\
  !*** ./src/content/typography.ts ***!
  \***********************************/(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createTypography=void 0;const o=r(/*! @supernovaio/sdk-exporters */"./node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js"),n="OffenburgTypography";function a(e,t){return{lineHeight:i(e.lineHeight,t),fontSize:i(e.fontSize,t),fontFamily:s(e.fontFamily,e.fontWeight,t),fontWeight:l(e.fontWeight,t),letterSpacing:i(e.letterSpacing,t),decoration:u(e.textDecoration,t)}}function i(e,t){return e?e.referencedTokenId?t.resolveTokenReference(e.referencedTokenId):`${e.measure}`:"null"}function s(e,t,r){return e?e.referencedTokenId?r.resolveTokenReference(e.referencedTokenId):t?.text?`${e.text} ${t.text}`:e.text:"null"}t.createTypography=function(e){const t=e.getTokensForType(o.TokenType.typography);var r=new Map;for(let o of t){r[e.resolveTokenVariableName(o,n)]=a(o.value,e)}return{className:n,typographies:r}};const c={regular:"FontWeight.w400",medium:"FontWeight.w500",semibold:"FontWeight.w600",500:"FontWeight.w500",600:"FontWeight.w600",700:"FontWeight.w700"};function l(e,t){return e?e.referencedTokenId?t.resolveTokenReference(e.referencedTokenId):c[e.text]??"FontWeight.w400":"null"}function u(e,t){return e?e.referencedTokenId?t.resolveTokenReference(e.referencedTokenId):`TextDecoration.${e.value?.toLowerCase()??"none"}`:"null"}},"./src/content/util.ts":
/*!*****************************!*\
  !*** ./src/content/util.ts ***!
  \*****************************/(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.referenceHelper=t.tokenShadeName=t.flutterColorValue=t.groupVariableName=t.tokenVariableName=t.isSemantic=t.isPrimitive=void 0;const o=r(/*! @supernovaio/export-helpers */"./node_modules/@supernovaio/export-helpers/build/helpers.js"),n=r(/*! @supernovaio/sdk-exporters */"./node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js");function a(e){return!("value"in e)||(!("referenceTokenId"in e)||null==e.value.referencedTokenId)}function i(e,t){return o.NamingHelper.codeSafeVariableName(["color",t.name],o.StringCase.camelCase)+`.shade${e.name}`}t.isPrimitive=a,t.isSemantic=function(e){return!a(e)},t.tokenVariableName=function(e,t,r="color"){return o.NamingHelper.codeSafeVariableNameForToken(e,o.StringCase.camelCase,t,r)},t.groupVariableName=function(e){return o.NamingHelper.codeSafeVariableName(["color",e.name],o.StringCase.camelCase)},t.flutterColorValue=function(e){const t=e.toHex8();return`Color(0x${t.slice(7,9).toUpperCase()}${t.slice(1,7).toUpperCase()})`},t.tokenShadeName=i,t.referenceHelper=function(e,t){var r=new Map,a=new Map;return{resolveTokenVariableName:function(e,s,c){let l=r[e.id];if(!r.has(e.id)){const u=t.find((t=>t.id===e.parentGroupId));if(l=function(e,t,r){return e.tokenType!=n.TokenType.color||isNaN(parseInt(e.name))?o.NamingHelper.codeSafeVariableNameForToken(e,o.StringCase.camelCase,t,r):i(e,t)}(e,u,c??null),e?.value?.referencedTokenId){const t=e.value.referencedTokenId;a[e.id]=a[t],r[e.id]=r[t]}else a[e.id]=s,r[e.id]=l}return l},resolveTokenReference:function(e){if(!e)return"null";let t=r[e];return a[e]+"."+t},getTokensForType:function(t){return e.filter((e=>e.tokenType===t))},getGroupsForType:function(e){return t.filter((t=>t.tokenType===e))},getUnprocessedTokensForType:function(t){return e.filter((e=>e.tokenType===t&&!(e.id in r)))}}}},"./src/templates/color_scheme.template.ts":
/*!************************************************!*\
  !*** ./src/templates/color_scheme.template.ts ***!
  \************************************************/(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.renderColorScheme=void 0,t.renderColorScheme=function(e,t){return e.renderString(r,t)};const r="\nimport 'package:flutter/material.dart';\nimport 'package:sev_design_tokens/src/colors/primitive_colors.dart';\n\n/* This file was generated by Supernova, don't change by hand */\n@immutable\nclass <%=it.className%> extends ThemeExtension<<%=it.className%>> {\n  const <%=it.className%>({\n  <% for(var color of it.colors) {%>\n    required this.<%=color%>,\n  <% } %>\n  });\n\n  <% for(var themeName in it.themes) {\n    var theme = it.themes[themeName]\n    %>\n  factory <%=it.className%>.<%=themeName%>() => <%=it.className%>(\n    <% for(var color of it.colors) {%>\n      <%=color%>: <%=theme[color]%>,\n    <% } %>\n      );\n  <% } %>\n\n  <% for(var color of it.colors) {%>\n  final Color <%=color%>;\n  <% } %>\n\n  @override\n  ThemeExtension<<%=it.className%>> copyWith({\n    <% for(var color of it.colors) {%>\n    Color? <%=color%>,\n    <% } %>\n  }) {\n    return <%=it.className%>(\n      <% for(var color of it.colors) {%>\n      <%=color%>:\n        <%=color%> ?? this.<%=color%>,\n      <% } %>\n    );\n  }\n\n  @override\n  ThemeExtension<<%=it.className%>> lerp(\n    <%=it.className%>? other,\n    double t,\n  ) {\n    if (other is! <%=it.className%>) {\n      return this;\n    }\n    return <%=it.className%>(\n      <% for(var color of it.colors) {%>\n  <%=color%>: Color.lerp(\n        <%=color%>,\n        other.<%=color%>,\n        t,\n      )!,\n      <% } %>\n    );\n  }\n  \n  static <%=it.className%> of(BuildContext context) =>\n      Theme.of(context).extension<<%=it.className%>>()!;\n}\n"},"./src/templates/constants.template.ts":
/*!*********************************************!*\
  !*** ./src/templates/constants.template.ts ***!
  \*********************************************/(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.renderConstantsFile=void 0,t.renderConstantsFile=function(e,t){return e.renderString(r,t)};const r="\nimport 'package:flutter/material.dart';\n\n/* This file was generated by Supernova, don't change by hand */\n@immutable\nclass <%=it.className%> {\n  <% for (var name in it.variables) {%>\n  static const <%=it.typeName%> <%=name%> = <%=it.variables[name]%>;\n  <% } %>\n}\n"},"./src/templates/primitive_colors.template.ts":
/*!****************************************************!*\
  !*** ./src/templates/primitive_colors.template.ts ***!
  \****************************************************/(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.renderPrimitiveColors=void 0,t.renderPrimitiveColors=function(e,t){return e.renderString(r,t)};const r="\nimport 'package:flutter/material.dart';\nimport 'package:sev_design_tokens/src/colors/offenburg_color_swatch.dart';\n\n/* This file was generated by Supernova, don't change by hand */\nclass <%=it.className%> {\n  <% for(var swatch in it.swatches) {%>\n  static const OffenburgColorSwatch <%=swatch%> = OffenburgColorSwatch(\n    0xFF20A381,\n    {\n      <% for(var shade in it.swatches[swatch]) {%>\n      OffenburgColorShade.shade<%=shade%>: <%=it.swatches[swatch][shade]%>,\n      <% } %>\n    },\n  );<% } %>\n\n  <% for (var color in it.colors) {%>\n  static const Color <%=color%> = <%=it.colors[color]%>;\n  <% } %>\n}\n"},"./src/templates/shadows.template.ts":
/*!*******************************************!*\
  !*** ./src/templates/shadows.template.ts ***!
  \*******************************************/(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.renderShadows=void 0,t.renderShadows=function(e,t){return e.renderString(r,t)};const r="\nimport 'package:flutter/material.dart';\n\n/* This file was generated by Supernova, don't change by hand */\n@immutable\nclass <%=it.className%> {\n\n  <% for (var name in it.variables) {%>\n  <% var shadow = it.variables[name] %>\n  static const BoxShadow <%=name%> = BoxShadow(\n    color: <%=shadow.color%>,\n    blurStyle: <%=shadow.blurStyle%>,\n    offset: Offset(<%=shadow.offsetX%>, <%=shadow.offsetY%>),\n    blurRadius: <%=shadow.blurRadius%>,\n    spreadRadius: <%=shadow.spreadRadius%>,\n  );\n  <% } %>\n}\n"},"./src/templates/typography.template.ts":
/*!**********************************************!*\
  !*** ./src/templates/typography.template.ts ***!
  \**********************************************/(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.renderTypographyScheme=void 0,t.renderTypographyScheme=function(e,t){return e.renderString(r,t)};const r="\nimport 'package:flutter/material.dart';\nimport 'package:sev_design_tokens/src/typography/font_sizes.dart';\nimport 'package:sev_design_tokens/src/typography/letter_spacings.dart';\nimport 'package:sev_design_tokens/src/typography/line_heights.dart';\n\nexport 'package:sev_design_tokens/src/typography/font_sizes.dart';\nexport 'package:sev_design_tokens/src/typography/letter_spacings.dart';\nexport 'package:sev_design_tokens/src/typography/line_heights.dart';\n\n\n/* This file was generated by Supernova, don't change by hand */\n@immutable\nclass <%=it.className%> extends ThemeExtension<<%=it.className%>> {\n  const <%=it.className%>({\n  <% for(var typos in it.typographies) {%>\n    required this.<%=typos%>,\n  <% } %>\n  });\n\n  factory <%=it.className%>.init() => <%=it.className%>(\n    <% for(var typo in it.typographies) {%>\n      <%=typo%>:  const TextStyle(\n        fontSize: <%=it.typographies[typo].fontSize%>,\n        height: <%=it.typographies[typo].lineHeight%>, \n        fontFamily: '<%=it.typographies[typo].fontFamily%>',\n        fontWeight: <%=it.typographies[typo].fontWeight%>,\n        letterSpacing: <%=it.typographies[typo].letterSpacing%>,\n        decoration: <%=it.typographies[typo].decoration%>,\n        // paragraph spacing <-- geht nur in RichText\n        // paragraph indent <-- geht nur in RichText\n        // uppercase <-- muss händisch gemacht werden\n      ),\n    <% } %>\n      );\n\n  <% for(var typo in it.typographies) {%>\n  final TextStyle <%=typo%>;\n  <% } %>\n\n  @override\n  ThemeExtension<<%=it.className%>> copyWith({\n    <% for(var typo in it.typographies) {%>\n    TextStyle? <%=typo%>,\n    <% } %>\n  }) {\n    return <%=it.className%>(\n      <% for(var typo in it.typographies) {%>\n      <%=typo%>:\n        <%=typo%> ?? this.<%=typo%>,\n      <% } %>\n    );\n  }\n\n  @override\n  ThemeExtension<<%=it.className%>> lerp(\n    <%=it.className%>? other,\n    double t,\n  ) {\n    if (other is! <%=it.className%>) {\n      return this;\n    }\n    return <%=it.className%>(\n      <% for(var typo in it.typographies) {%>\n  <%=typo%>: TextStyle.lerp(\n        <%=typo%>,\n        other.<%=typo%>,\n        t,\n      )!,\n      <% } %>\n    );\n  }\n  \n  static <%=it.className%> of(BuildContext context) =>\n      Theme.of(context).extension<<%=it.className%>>()!;\n}\n"},"./node_modules/upper-case-first/dist.es2015/index.js":
/*!************************************************************!*\
  !*** ./node_modules/upper-case-first/dist.es2015/index.js ***!
  \************************************************************/(e,t,r)=>{"use strict";function o(e){return e.charAt(0).toUpperCase()+e.substr(1)}r.r(t),r.d(t,{upperCaseFirst:()=>o})},"./node_modules/upper-case/dist.es2015/index.js":
/*!******************************************************!*\
  !*** ./node_modules/upper-case/dist.es2015/index.js ***!
  \******************************************************/(e,t,r)=>{"use strict";r.r(t),r.d(t,{localeUpperCase:()=>n,upperCase:()=>a});var o={tr:{regexp:/[\u0069]/g,map:{i:"İ"}},az:{regexp:/[\u0069]/g,map:{i:"İ"}},lt:{regexp:/[\u0069\u006A\u012F]\u0307|\u0069\u0307[\u0300\u0301\u0303]/g,map:{i̇:"I",j̇:"J",į̇:"Į",i̇̀:"Ì",i̇́:"Í",i̇̃:"Ĩ"}}};function n(e,t){var r=o[t.toLowerCase()];return a(r?e.replace(r.regexp,(function(e){return r.map[e]})):e)}function a(e){return e.toUpperCase()}},"./node_modules/eta/dist/browser.umd.js":
/*!**********************************************!*\
  !*** ./node_modules/eta/dist/browser.umd.js ***!
  \**********************************************/function(e,t){!function(e){function t(){return t=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o])}return e},t.apply(this,arguments)}function r(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,n(e,t)}function o(e){return o=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},o(e)}function n(e,t){return n=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},n(e,t)}function a(e,t,r){return a=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}()?Reflect.construct.bind():function(e,t,r){var o=[null];o.push.apply(o,t);var a=new(Function.bind.apply(e,o));return r&&n(a,r.prototype),a},a.apply(null,arguments)}function i(e){var t="function"==typeof Map?new Map:void 0;return i=function(e){if(null===e||-1===Function.toString.call(e).indexOf("[native code]"))return e;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,r)}function r(){return a(e,arguments,o(this).constructor)}return r.prototype=Object.create(e.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),n(r,e)},i(e)}var s=function(){function e(e){this.cache=void 0,this.cache=e}var r=e.prototype;return r.define=function(e,t){this.cache[e]=t},r.get=function(e){return this.cache[e]},r.remove=function(e){delete this.cache[e]},r.reset=function(){this.cache={}},r.load=function(e){this.cache=t({},this.cache,e)},e}(),c=function(e){function t(t){var r;return(r=e.call(this,t)||this).name="Eta Error",r}return r(t,e),t}(i(Error));function l(e,t,r){var o=t.slice(0,r).split(/\n/),n=o.length,a=o[n-1].length+1;throw e+=" at line "+n+" col "+a+":\n\n  "+t.split(/\n/)[n-1]+"\n  "+Array(a).join(" ")+"^",new c(e)}function u(e,t,r,o){var n=t.split("\n"),a=Math.max(r-3,0),i=Math.min(n.length,r+3),s=o,l=n.slice(a,i).map((function(e,t){var o=t+a+1;return(o==r?" >> ":"    ")+o+"| "+e})).join("\n"),u=new c((s?s+":"+r+"\n":"line "+r+"\n")+l+"\n\n"+e.message);throw u.name=e.name,u}var p=function(){return Promise.resolve()}.constructor;function d(e,t){var r=this.config,o=t&&t.async?p:Function;try{return new o(r.varName,"options",this.compileToString.call(this,e,t))}catch(r){throw r instanceof SyntaxError?new c("Bad template syntax\n\n"+r.message+"\n"+Array(r.message.length+1).join("=")+"\n"+this.compileToString.call(this,e,t)+"\n"):r}}function y(e,t){var r=this.config,o=t&&t.async,n=this.compileBody,a=this.parse.call(this,e),i=r.functionHeader+'\nlet include = (template, data) => this.render(template, data, options);\nlet includeAsync = (template, data) => this.renderAsync(template, data, options);\n\nlet __eta = {res: "", e: this.config.escapeFunction, f: this.config.filterFunction'+(r.debug?', line: 1, templateStr: "'+e.replace(/\\|"/g,"\\$&").replace(/\r\n|\n|\r/g,"\\n")+'"':"")+"};\n\nfunction layout(path, data) {\n  __eta.layout = path;\n  __eta.layoutData = data;\n}"+(r.debug?"try {":"")+(r.useWith?"with("+r.varName+"||{}){":"")+"\n\n"+n.call(this,a)+"\nif (__eta.layout) {\n  __eta.res = "+(o?"await includeAsync":"include")+" (__eta.layout, {..."+r.varName+", body: __eta.res, ...__eta.layoutData});\n}\n"+(r.useWith?"}":"")+(r.debug?"} catch (e) { this.RuntimeErr(e, __eta.templateStr, __eta.line, options.filepath) }":"")+"\nreturn __eta.res;\n";if(r.plugins)for(var s=0;s<r.plugins.length;s++){var c=r.plugins[s];c.processFnString&&(i=c.processFnString(i,r))}return i}function m(e){for(var t=this.config,r=0,o=e.length,n="";r<o;r++){var a=e[r];if("string"==typeof a)n+="__eta.res+='"+a+"'\n";else{var i=a.t,s=a.val||"";t.debug&&(n+="__eta.line="+a.lineNo+"\n"),"r"===i?(t.autoFilter&&(s="__eta.f("+s+")"),n+="__eta.res+="+s+"\n"):"i"===i?(t.autoFilter&&(s="__eta.f("+s+")"),t.autoEscape&&(s="__eta.e("+s+")"),n+="__eta.res+="+s+"\n"):"e"===i&&(n+=s+"\n")}}return n}var f={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"};function T(e){return f[e]}var h={autoEscape:!0,autoFilter:!1,autoTrim:[!1,"nl"],cache:!1,cacheFilepaths:!0,debug:!1,escapeFunction:function(e){var t=String(e);return/[&<>"']/.test(t)?t.replace(/[&<>"']/g,T):t},filterFunction:function(e){return String(e)},functionHeader:"",parse:{exec:"",interpolate:"=",raw:"~"},plugins:[],rmWhitespace:!1,tags:["<%","%>"],useWith:!1,varName:"it",defaultExtension:".eta"},g=/`(?:\\[\s\S]|\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})*}|(?!\${)[^\\`])*`/g,v=/'(?:\\[\s\w"'\\`]|[^\n\r'\\])*?'/g,b=/"(?:\\[\s\w"'\\`]|[^\n\r"\\])*?"/g;function _(e){return e.replace(/[.*+\-?^${}()|[\]\\]/g,"\\$&")}function S(e,t){return e.slice(0,t).split("\n").length}function k(e){var t=this.config,r=[],o=!1,n=0,a=t.parse;if(t.plugins)for(var i=0;i<t.plugins.length;i++){var s=t.plugins[i];s.processTemplate&&(e=s.processTemplate(e,t))}function c(e,n){e&&(e=function(e,t,r,o){var n,a;return Array.isArray(t.autoTrim)?(n=t.autoTrim[1],a=t.autoTrim[0]):n=a=t.autoTrim,(r||!1===r)&&(n=r),(o||!1===o)&&(a=o),a||n?"slurp"===n&&"slurp"===a?e.trim():("_"===n||"slurp"===n?e=e.trimStart():"-"!==n&&"nl"!==n||(e=e.replace(/^(?:\r\n|\n|\r)/,"")),"_"===a||"slurp"===a?e=e.trimEnd():"-"!==a&&"nl"!==a||(e=e.replace(/(?:\r\n|\n|\r)$/,"")),e):e}(e,t,o,n),e&&(e=e.replace(/\\|'/g,"\\$&").replace(/\r\n|\n|\r/g,"\\n"),r.push(e)))}t.rmWhitespace&&(e=e.replace(/[\r\n]+/g,"\n").replace(/^\s+|\s+$/gm,"")),g.lastIndex=0,v.lastIndex=0,b.lastIndex=0;for(var u,p=[a.exec,a.interpolate,a.raw].reduce((function(e,t){return e&&t?e+"|"+_(t):t?_(t):e}),""),d=new RegExp(_(t.tags[0])+"(-|_)?\\s*("+p+")?\\s*","g"),y=new RegExp("'|\"|`|\\/\\*|(\\s*(-|_)?"+_(t.tags[1])+")","g");u=d.exec(e);){var m=e.slice(n,u.index);n=u[0].length+u.index;var f=u[2]||"";c(m,u[1]),y.lastIndex=n;for(var T=void 0,h=!1;T=y.exec(e);){if(T[1]){var k=e.slice(n,T.index);d.lastIndex=n=y.lastIndex,o=T[2],h={t:f===a.exec?"e":f===a.raw?"r":f===a.interpolate?"i":"",val:k};break}var P=T[0];if("/*"===P){var C=e.indexOf("*/",y.lastIndex);-1===C&&l("unclosed comment",e,T.index),y.lastIndex=C}else"'"===P?(v.lastIndex=T.index,v.exec(e)?y.lastIndex=v.lastIndex:l("unclosed string",e,T.index)):'"'===P?(b.lastIndex=T.index,b.exec(e)?y.lastIndex=b.lastIndex:l("unclosed string",e,T.index)):"`"===P&&(g.lastIndex=T.index,g.exec(e)?y.lastIndex=g.lastIndex:l("unclosed string",e,T.index))}h?(t.debug&&(h.lineNo=S(e,u.index)),r.push(h)):l("unclosed tag",e,u.index)}if(c(e.slice(n,e.length),!1),t.plugins)for(var x=0;x<t.plugins.length;x++){var O=t.plugins[x];O.processAST&&(r=O.processAST(r,t))}return r}function P(e,t){var r=t&&t.async?this.templatesAsync:this.templatesSync;if(this.resolvePath&&this.readFile&&!e.startsWith("@")){var o=t.filepath,n=r.get(o);if(this.config.cache&&n)return n;var a=this.readFile(o),i=this.compile(a,t);return this.config.cache&&r.define(o,i),i}var s=r.get(e);if(s)return s;throw new c("Failed to get template '"+e+"'")}function C(e,r,o){var n,a=t({},o,{async:!1});return"string"==typeof e?(this.resolvePath&&this.readFile&&!e.startsWith("@")&&(a.filepath=this.resolvePath(e,a)),n=P.call(this,e,a)):n=e,n.call(this,r,a)}function x(e,r,o){var n,a=t({},o,{async:!0});"string"==typeof e?(this.resolvePath&&this.readFile&&!e.startsWith("@")&&(a.filepath=this.resolvePath(e,a)),n=P.call(this,e,a)):n=e;var i=n.call(this,r,a);return Promise.resolve(i)}function O(e,t){var r=this.compile(e,{async:!1});return C.call(this,r,t)}function I(e,t){var r=this.compile(e,{async:!0});return x.call(this,r,t)}var w=function(){function e(e){this.config=void 0,this.RuntimeErr=u,this.compile=d,this.compileToString=y,this.compileBody=m,this.parse=k,this.render=C,this.renderAsync=x,this.renderString=O,this.renderStringAsync=I,this.filepathCache={},this.templatesSync=new s({}),this.templatesAsync=new s({}),this.resolvePath=null,this.readFile=null,this.config=e?t({},h,e):t({},h)}var r=e.prototype;return r.configure=function(e){this.config=t({},this.config,e)},r.withConfig=function(e){return t({},this,{config:t({},this.config,e)})},r.loadTemplate=function(e,t,r){if("string"==typeof t)(r&&r.async?this.templatesAsync:this.templatesSync).define(e,this.compile(t,r));else{var o=this.templatesSync;("AsyncFunction"===t.constructor.name||r&&r.async)&&(o=this.templatesAsync),o.define(e,t)}},e}(),j=function(e){function t(){return e.apply(this,arguments)||this}return r(t,e),t}(w);e.Eta=j}(t)},"./node_modules/tslib/tslib.es6.mjs":
/*!******************************************!*\
  !*** ./node_modules/tslib/tslib.es6.mjs ***!
  \******************************************/(e,t,r)=>{"use strict";r.r(t),r.d(t,{__addDisposableResource:()=>R,__assign:()=>a,__asyncDelegator:()=>C,__asyncGenerator:()=>P,__asyncValues:()=>x,__await:()=>k,__awaiter:()=>m,__classPrivateFieldGet:()=>D,__classPrivateFieldIn:()=>E,__classPrivateFieldSet:()=>N,__createBinding:()=>T,__decorate:()=>s,__disposeResources:()=>B,__esDecorate:()=>l,__exportStar:()=>h,__extends:()=>n,__generator:()=>f,__importDefault:()=>j,__importStar:()=>w,__makeTemplateObject:()=>O,__metadata:()=>y,__param:()=>c,__propKey:()=>p,__read:()=>v,__rest:()=>i,__runInitializers:()=>u,__setFunctionName:()=>d,__spread:()=>b,__spreadArray:()=>S,__spreadArrays:()=>_,__values:()=>g,default:()=>L});var o=function(e,t){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},o(e,t)};function n(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function r(){this.constructor=e}o(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}var a=function(){return a=Object.assign||function(e){for(var t,r=1,o=arguments.length;r<o;r++)for(var n in t=arguments[r])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e},a.apply(this,arguments)};function i(e,t){var r={};for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.indexOf(o)<0&&(r[o]=e[o]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var n=0;for(o=Object.getOwnPropertySymbols(e);n<o.length;n++)t.indexOf(o[n])<0&&Object.prototype.propertyIsEnumerable.call(e,o[n])&&(r[o[n]]=e[o[n]])}return r}function s(e,t,r,o){var n,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var s=e.length-1;s>=0;s--)(n=e[s])&&(i=(a<3?n(i):a>3?n(t,r,i):n(t,r))||i);return a>3&&i&&Object.defineProperty(t,r,i),i}function c(e,t){return function(r,o){t(r,o,e)}}function l(e,t,r,o,n,a){function i(e){if(void 0!==e&&"function"!=typeof e)throw new TypeError("Function expected");return e}for(var s,c=o.kind,l="getter"===c?"get":"setter"===c?"set":"value",u=!t&&e?o.static?e:e.prototype:null,p=t||(u?Object.getOwnPropertyDescriptor(u,o.name):{}),d=!1,y=r.length-1;y>=0;y--){var m={};for(var f in o)m[f]="access"===f?{}:o[f];for(var f in o.access)m.access[f]=o.access[f];m.addInitializer=function(e){if(d)throw new TypeError("Cannot add initializers after decoration has completed");a.push(i(e||null))};var T=(0,r[y])("accessor"===c?{get:p.get,set:p.set}:p[l],m);if("accessor"===c){if(void 0===T)continue;if(null===T||"object"!=typeof T)throw new TypeError("Object expected");(s=i(T.get))&&(p.get=s),(s=i(T.set))&&(p.set=s),(s=i(T.init))&&n.unshift(s)}else(s=i(T))&&("field"===c?n.unshift(s):p[l]=s)}u&&Object.defineProperty(u,o.name,p),d=!0}function u(e,t,r){for(var o=arguments.length>2,n=0;n<t.length;n++)r=o?t[n].call(e,r):t[n].call(e);return o?r:void 0}function p(e){return"symbol"==typeof e?e:"".concat(e)}function d(e,t,r){return"symbol"==typeof t&&(t=t.description?"[".concat(t.description,"]"):""),Object.defineProperty(e,"name",{configurable:!0,value:r?"".concat(r," ",t):t})}function y(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}function m(e,t,r,o){return new(r||(r=Promise))((function(n,a){function i(e){try{c(o.next(e))}catch(e){a(e)}}function s(e){try{c(o.throw(e))}catch(e){a(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(i,s)}c((o=o.apply(e,t||[])).next())}))}function f(e,t){var r,o,n,a,i={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(s){return function(c){return function(s){if(r)throw new TypeError("Generator is already executing.");for(;a&&(a=0,s[0]&&(i=0)),i;)try{if(r=1,o&&(n=2&s[0]?o.return:s[0]?o.throw||((n=o.return)&&n.call(o),0):o.next)&&!(n=n.call(o,s[1])).done)return n;switch(o=0,n&&(s=[2&s[0],n.value]),s[0]){case 0:case 1:n=s;break;case 4:return i.label++,{value:s[1],done:!1};case 5:i.label++,o=s[1],s=[0];continue;case 7:s=i.ops.pop(),i.trys.pop();continue;default:if(!(n=i.trys,(n=n.length>0&&n[n.length-1])||6!==s[0]&&2!==s[0])){i=0;continue}if(3===s[0]&&(!n||s[1]>n[0]&&s[1]<n[3])){i.label=s[1];break}if(6===s[0]&&i.label<n[1]){i.label=n[1],n=s;break}if(n&&i.label<n[2]){i.label=n[2],i.ops.push(s);break}n[2]&&i.ops.pop(),i.trys.pop();continue}s=t.call(e,i)}catch(e){s=[6,e],o=0}finally{r=n=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,c])}}}var T=Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]};function h(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||T(t,e,r)}function g(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],o=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&o>=e.length&&(e=void 0),{value:e&&e[o++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function v(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var o,n,a=r.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(o=a.next()).done;)i.push(o.value)}catch(e){n={error:e}}finally{try{o&&!o.done&&(r=a.return)&&r.call(a)}finally{if(n)throw n.error}}return i}function b(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(v(arguments[t]));return e}function _(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var o=Array(e),n=0;for(t=0;t<r;t++)for(var a=arguments[t],i=0,s=a.length;i<s;i++,n++)o[n]=a[i];return o}function S(e,t,r){if(r||2===arguments.length)for(var o,n=0,a=t.length;n<a;n++)!o&&n in t||(o||(o=Array.prototype.slice.call(t,0,n)),o[n]=t[n]);return e.concat(o||Array.prototype.slice.call(t))}function k(e){return this instanceof k?(this.v=e,this):new k(e)}function P(e,t,r){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var o,n=r.apply(e,t||[]),a=[];return o={},i("next"),i("throw"),i("return"),o[Symbol.asyncIterator]=function(){return this},o;function i(e){n[e]&&(o[e]=function(t){return new Promise((function(r,o){a.push([e,t,r,o])>1||s(e,t)}))})}function s(e,t){try{(r=n[e](t)).value instanceof k?Promise.resolve(r.value.v).then(c,l):u(a[0][2],r)}catch(e){u(a[0][3],e)}var r}function c(e){s("next",e)}function l(e){s("throw",e)}function u(e,t){e(t),a.shift(),a.length&&s(a[0][0],a[0][1])}}function C(e){var t,r;return t={},o("next"),o("throw",(function(e){throw e})),o("return"),t[Symbol.iterator]=function(){return this},t;function o(o,n){t[o]=e[o]?function(t){return(r=!r)?{value:k(e[o](t)),done:!1}:n?n(t):t}:n}}function x(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,r=e[Symbol.asyncIterator];return r?r.call(e):(e=g(e),t={},o("next"),o("throw"),o("return"),t[Symbol.asyncIterator]=function(){return this},t);function o(r){t[r]=e[r]&&function(t){return new Promise((function(o,n){(function(e,t,r,o){Promise.resolve(o).then((function(t){e({value:t,done:r})}),t)})(o,n,(t=e[r](t)).done,t.value)}))}}}function O(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}var I=Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t};function w(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&T(t,e,r);return I(t,e),t}function j(e){return e&&e.__esModule?e:{default:e}}function D(e,t,r,o){if("a"===r&&!o)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!o:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===r?o:"a"===r?o.call(e):o?o.value:t.get(e)}function N(e,t,r,o,n){if("m"===o)throw new TypeError("Private method is not writable");if("a"===o&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===o?n.call(e,r):n?n.value=r:t.set(e,r),r}function E(e,t){if(null===t||"object"!=typeof t&&"function"!=typeof t)throw new TypeError("Cannot use 'in' operator on non-object");return"function"==typeof e?t===e:e.has(t)}function R(e,t,r){if(null!=t){if("object"!=typeof t&&"function"!=typeof t)throw new TypeError("Object expected.");var o;if(r){if(!Symbol.asyncDispose)throw new TypeError("Symbol.asyncDispose is not defined.");o=t[Symbol.asyncDispose]}if(void 0===o){if(!Symbol.dispose)throw new TypeError("Symbol.dispose is not defined.");o=t[Symbol.dispose]}if("function"!=typeof o)throw new TypeError("Object not disposable.");e.stack.push({value:t,dispose:o,async:r})}else r&&e.stack.push({async:!0});return t}var F="function"==typeof SuppressedError?SuppressedError:function(e,t,r){var o=new Error(r);return o.name="SuppressedError",o.error=e,o.suppressed=t,o};function B(e){function t(t){e.error=e.hasError?new F(t,e.error,"An error was suppressed during disposal."):t,e.hasError=!0}return function r(){for(;e.stack.length;){var o=e.stack.pop();try{var n=o.dispose&&o.dispose.call(o.value);if(o.async)return Promise.resolve(n).then(r,(function(e){return t(e),r()}))}catch(e){t(e)}}if(e.hasError)throw e.error}()}const L={__extends:n,__assign:a,__rest:i,__decorate:s,__param:c,__metadata:y,__awaiter:m,__generator:f,__createBinding:T,__exportStar:h,__values:g,__read:v,__spread:b,__spreadArrays:_,__spreadArray:S,__await:k,__asyncGenerator:P,__asyncDelegator:C,__asyncValues:x,__makeTemplateObject:O,__importStar:w,__importDefault:j,__classPrivateFieldGet:D,__classPrivateFieldSet:N,__classPrivateFieldIn:E,__addDisposableResource:R,__disposeResources:B}}},t={};function r(o){var n=t[o];if(void 0!==n)return n.exports;var a=t[o]={exports:{}};return e[o].call(a.exports,a,a.exports,r),a.exports}r.d=(e,t)=>{for(var o in t)r.o(t,o)&&!r.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var o={};(()=>{"use strict";var e=o;
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/Object.defineProperty(e,"__esModule",{value:!0}),e.exportConfiguration=void 0;const t=r(/*! ./content/primitive_colors */"./src/content/primitive_colors.ts"),n=r(/*! ./content/semantic_colors */"./src/content/semantic_colors.ts"),a=r(/*! eta */"./node_modules/eta/dist/browser.umd.js"),i=r(/*! @supernovaio/export-helpers */"./node_modules/@supernovaio/export-helpers/build/helpers.js"),s=r(/*! ./templates/primitive_colors.template */"./src/templates/primitive_colors.template.ts"),c=r(/*! ./templates/color_scheme.template */"./src/templates/color_scheme.template.ts"),l=r(/*! ./content/typography */"./src/content/typography.ts"),u=r(/*! ./templates/typography.template */"./src/templates/typography.template.ts"),p=r(/*! ./content/util */"./src/content/util.ts"),d=r(/*! ./content/primitive_dimensions */"./src/content/primitive_dimensions.ts"),y=r(/*! ./templates/constants.template */"./src/templates/constants.template.ts"),m=r(/*! ./content/shadows */"./src/content/shadows.ts"),f=r(/*! ./templates/shadows.template */"./src/templates/shadows.template.ts");Pulsar.export((async(e,r)=>{const[o,T]=await async function(e,t){const r={designSystemId:t.dsId,versionId:t.versionId};let o=await e.tokens.getTokens(r),n=await e.tokens.getTokenGroups(r);t.brandId&&(o=o.filter((e=>e.brandId===t.brandId)),n=n.filter((e=>e.brandId===t.brandId)));if(t.themeId){const n=(await e.tokens.getTokenThemes(r)).find((e=>e.id===t.themeId));if(!n)throw new Error("Unable to apply theme which doesn't exist in the system.");o=await e.tokens.computeTokensByApplyingThemes(o,[n])}return[o,n]}(e,r);return function(e,r){const o=new a.Eta({debug:!0}),T=(0,p.referenceHelper)(e,r),h=(0,t.createPrimitiveColors)(T),g=(0,n.createColors)(T),v=(0,m.createShadows)(T),b=(0,d.createFontSizes)(T),_=(0,d.createLineHeights)(T),S=(0,d.createLetterSpacings)(T),k=(0,d.createGenericSpacings)(T),P=(0,l.createTypography)(T);return[i.FileHelper.createTextFile({relativePath:"./src/colors",fileName:"primitive_colors.dart",content:(0,s.renderPrimitiveColors)(o,h)}),i.FileHelper.createTextFile({relativePath:"./src/colors",fileName:"color_scheme.dart",content:(0,c.renderColorScheme)(o,g)}),i.FileHelper.createTextFile({relativePath:"./src/shadows",fileName:"shadows.dart",content:(0,f.renderShadows)(o,v)}),i.FileHelper.createTextFile({relativePath:"./src/typography",fileName:"line_heights.dart",content:(0,y.renderConstantsFile)(o,_)}),i.FileHelper.createTextFile({relativePath:"./src/typography",fileName:"font_sizes.dart",content:(0,y.renderConstantsFile)(o,b)}),i.FileHelper.createTextFile({relativePath:"./src/typography",fileName:"letter_spacings.dart",content:(0,y.renderConstantsFile)(o,S)}),i.FileHelper.createTextFile({relativePath:"./src/dimensions",fileName:"spacings.dart",content:(0,y.renderConstantsFile)(o,k)}),i.FileHelper.createTextFile({relativePath:"./src/typography",fileName:"typography.dart",content:(0,u.renderTypographyScheme)(o,P)})]}(o,T)})),e.exportConfiguration=Pulsar.exportConfig()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,